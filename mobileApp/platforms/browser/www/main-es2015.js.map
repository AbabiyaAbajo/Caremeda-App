{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/core/components/footer/footer.component.html","webpack:///./src/app/core/components/header/header.component.html","webpack:///./src/app/core/components/toast/toast.component.html","webpack:///./src/app/modules/account/pages/account/account.component.html","webpack:///./src/app/modules/account/pages/account/billing/billing.component.html","webpack:///./src/app/modules/account/pages/account/dashboard/dashboard.component.html","webpack:///./src/app/modules/account/pages/account/inbox/inbox.component.html","webpack:///./src/app/modules/account/pages/account/notifications/notifications.component.html","webpack:///./src/app/modules/account/pages/account/security/security.component.html","webpack:///./src/app/modules/account/pages/account/settings/settings.component.html","webpack:///./src/app/modules/account/pages/account/shifts/shifts.component.html","webpack:///./src/app/modules/account/pages/account/upgrade/upgrade.component.html","webpack:///./src/app/modules/account/pages/account/work-offers/work-offers.component.html","webpack:///./src/app/modules/auth/pages/login/login.component.html","webpack:///./src/app/modules/auth/pages/recover/recover.component.html","webpack:///./src/app/modules/auth/pages/register/register.component.html","webpack:///./src/app/modules/home/pages/home/home.component.html","webpack:///./src/app/modules/profile/pages/profile/profile.component.html","webpack:///./src/app/modules/search/pages/search/search.component.html","webpack:///./src/app/modules/work-offer/pages/new/new.component.html","webpack:///./src/app/modules/work-offer/pages/view/view.component.html","webpack:///./src/app/shared/components/calendar/calendar.component.html","webpack:///./src/app/shared/components/modal/modal.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/configs/settings.config.ts","webpack:///./src/app/core/animations.ts","webpack:///./src/app/core/components/footer/footer.component.ts","webpack:///./src/app/core/components/header/header.component.ts","webpack:///./src/app/core/components/toast/toast.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/guards/client-auth.guard.ts","webpack:///./src/app/core/interceptors/api-prefix.interceptor.ts","webpack:///./src/app/core/interceptors/error-handler.interceptor.ts","webpack:///./src/app/core/interceptors/http-token.interceptor.ts","webpack:///./src/app/core/module-loaded-once.guard.ts","webpack:///./src/app/core/services/auth.service.ts","webpack:///./src/app/core/services/broadcast.service.ts","webpack:///./src/app/core/services/care-type.service.ts","webpack:///./src/app/core/services/caregiver.service.ts","webpack:///./src/app/core/services/geolocation.service.ts","webpack:///./src/app/core/services/notification.service.ts","webpack:///./src/app/core/services/shift.service.ts","webpack:///./src/app/core/services/thread.service.ts","webpack:///./src/app/core/services/title.service.ts","webpack:///./src/app/core/services/toast.service.ts","webpack:///./src/app/core/services/user.service.ts","webpack:///./src/app/core/services/work-message.service.ts","webpack:///./src/app/core/services/work-offer.service.ts","webpack:///./src/app/modules/account/account.module.ts","webpack:///./src/app/modules/account/account.routing.ts","webpack:///./src/app/modules/account/pages/account/account.component.ts","webpack:///./src/app/modules/account/pages/account/billing/billing.component.ts","webpack:///./src/app/modules/account/pages/account/dashboard/dashboard.component.ts","webpack:///./src/app/modules/account/pages/account/inbox/inbox.component.ts","webpack:///./src/app/modules/account/pages/account/notifications/notifications.component.ts","webpack:///./src/app/modules/account/pages/account/security/security.component.ts","webpack:///./src/app/modules/account/pages/account/settings/settings.component.ts","webpack:///./src/app/modules/account/pages/account/shifts/shifts.component.ts","webpack:///./src/app/modules/account/pages/account/upgrade/upgrade.component.ts","webpack:///./src/app/modules/account/pages/account/work-offers/work-offers.component.ts","webpack:///./src/app/modules/auth/auth.module.ts","webpack:///./src/app/modules/auth/auth.routing.ts","webpack:///./src/app/modules/auth/pages/login/login.component.ts","webpack:///./src/app/modules/auth/pages/recover/recover.component.ts","webpack:///./src/app/modules/auth/pages/register/register.component.ts","webpack:///./src/app/modules/home/home.module.ts","webpack:///./src/app/modules/home/home.routing.ts","webpack:///./src/app/modules/home/pages/home/home.component.ts","webpack:///./src/app/modules/profile/pages/profile/profile.component.ts","webpack:///./src/app/modules/profile/profile.module.ts","webpack:///./src/app/modules/profile/profile.routing.ts","webpack:///./src/app/modules/search/pages/search/search.component.ts","webpack:///./src/app/modules/search/search.module.ts","webpack:///./src/app/modules/search/search.routing.ts","webpack:///./src/app/modules/work-offer/pages/new/new.component.ts","webpack:///./src/app/modules/work-offer/pages/view/view.component.ts","webpack:///./src/app/modules/work-offer/work-offer.module.ts","webpack:///./src/app/modules/work-offer/work-offer.routing.ts","webpack:///./src/app/shared/components/calendar/calendar.component.scss","webpack:///./src/app/shared/components/calendar/calendar.component.ts","webpack:///./src/app/shared/components/modal/modal.component.scss","webpack:///./src/app/shared/components/modal/modal.component.ts","webpack:///./src/app/shared/directives/select-placeholder/select-placeholder.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<app-header [headerTheme]=\\\"headerTheme\\\"></app-header>\\n\\n<div class=\\\"root\\\" [@routeAnimations]=\\\"o.isActivated ? o.activatedRoute : ''\\\" *ngIf=\\\"(isLoggedIn && (user$ | async)) || !isLoggedIn\\\">\\n  <router-outlet #o=\\\"outlet\\\" (activate)=\\\"onActivate($event)\\\"></router-outlet>\\n</div>\\n\\n<app-footer></app-footer>\"","module.exports = \"<div id=\\\"footers-footer-2\\\" title=\\\"footers/footer-2.html\\\">\\n  <footer class=\\\"footer p-0 footer-dark bg-gradient-dark\\\" id=\\\"footer-main\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"py-4\\\">\\n        <div class=\\\"row align-items-md-center\\\">\\n          <div class=\\\"col-md-4 mb-4 mb-md-0\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n              <p class=\\\"text-sm mb-0\\\">&copy; {{ currentYear }} Caremada. All rights reserved.</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-6 col-md-4 mb-4 mb-sm-0\\\">\\n            <ul class=\\\"nav justify-content-center\\\">\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"pages/utility/support.html\\\">Support</a>\\n              </li>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"pages/utility/terms.html\\\">Terms</a>\\n              </li>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"pages/utility/privacy.html\\\">Privacy</a>\\n              </li>\\n            </ul>\\n          </div>\\n          <div class=\\\"col-sm-6 col-md-4\\\">\\n            <ul class=\\\"nav justify-content-center justify-content-md-end mt-3 mt-md-0\\\">\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"https://dribbble.com/webpixels\\\" target=\\\"_blank\\\">\\n                  <i class=\\\"fab fa-dribbble\\\"></i>\\n                </a>\\n              </li>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"https://www.instagram.com/webpixelsofficial\\\" target=\\\"_blank\\\">\\n                  <i class=\\\"fab fa-instagram\\\"></i>\\n                </a>\\n              </li>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"https://github.com/webpixels\\\" target=\\\"_blank\\\">\\n                  <i class=\\\"fab fa-github\\\"></i>\\n                </a>\\n              </li>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"https://www.facebook.com/webpixels\\\" target=\\\"_blank\\\">\\n                  <i class=\\\"fab fa-facebook\\\"></i>\\n                </a>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </footer>\\n</div>\"","module.exports = \"<header class=\\\"header header-transparent\\\" id=\\\"header-main\\\">\\n  <!-- Topbar -->\\n  <!-- <div id=\\\"navbar-top-main\\\" class=\\\"navbar-top  navbar-dark bg-dark border-bottom\\\">\\n    <div class=\\\"container px-0\\\">\\n      <div class=\\\"navbar-nav align-items-center\\\">\\n        <div class=\\\"ml-auto\\\">\\n          <ul class=\\\"nav\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"pages/utility/support.html\\\">Support</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a href=\\\"#\\\" class=\\\"nav-link\\\" data-action=\\\"omnisearch-open\\\" data-target=\\\"#omnisearch\\\"><i class=\\\"fas fa-search\\\"></i></a>\\n            </li>\\n            <li class=\\\"nav-item dropdown\\\">\\n              <a class=\\\"nav-link pr-0\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                <i class=\\\"fas fa-user-circle\\\"></i>\\n              </a>\\n              <div class=\\\"dropdown-menu dropdown-menu-sm dropdown-menu-right\\\">\\n                <h6 class=\\\"dropdown-header\\\">User menu</h6>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\n                  <i class=\\\"fas fa-user\\\"></i>Account\\n                </a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\n                  <span class=\\\"float-right badge badge-primary\\\">4</span>\\n                  <i class=\\\"fas fa-envelope\\\"></i>Messages\\n                </a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\n                  <i class=\\\"fas fa-cog\\\"></i>Settings\\n                </a>\\n                <div class=\\\"dropdown-divider\\\" role=\\\"presentation\\\"></div>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\n                  <i class=\\\"fas fa-sign-out-alt\\\"></i>Sign out\\n                </a>\\n              </div>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\\n  <!-- Main navbar -->\\n  <nav class=\\\"navbar navbar-main navbar-expand-lg navbar-transparent bg-dark\\\"\\n    [ngClass]=\\\"{'navbar-dark': headerTheme === 'dark', 'navbar-light': headerTheme === 'light'}\\\" id=\\\"navbar-main\\\">\\n    <div class=\\\"container px-lg-0\\\">\\n      <!-- Logo -->\\n      <a class=\\\"navbar-brand mr-lg-5\\\" routerLink=\\\"/\\\">\\n        <img *ngIf=\\\"headerTheme === 'dark'\\\" src=\\\"assets/img/brand/logo-white.png\\\" id=\\\"navbar-logo\\\" height=\\\"20\\\"\\n          alt=\\\"Caremada logo\\\">\\n        <img *ngIf=\\\"headerTheme === 'light'\\\" src=\\\"assets/img/brand/logo.png\\\" id=\\\"navbar-logo\\\" height=\\\"20\\\"\\n          alt=\\\"Caremada logo\\\">\\n      </a>\\n      <!-- Navbar collapse trigger -->\\n      <button class=\\\"navbar-toggler pr-0\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-main-collapse\\\"\\n        aria-controls=\\\"navbar-main-collapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <!-- Navbar nav -->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar-main-collapse\\\">\\n        <ul class=\\\"navbar-nav align-items-lg-center\\\">\\n          <!-- Home - Overview  -->\\n          <li *ngIf=\\\"!isServiceProvider\\\" class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/account/upgrade\\\">Become a Service Provider</a>\\n          </li>\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav align-items-lg-center ml-lg-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/search/work-offer\\\">Find a Work Offer</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/search/service-provider\\\">Find a Service Provider</a>\\n          </li>\\n          <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/work-offer/new\\\"><i class=\\\"fas fa-plus\\\"></i> Work Offer</a>\\n          </li>\\n          <!-- <li class=\\\"nav-item d-lg-none d-xl-block\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Help</a>\\n          </li> -->\\n          <li *ngIf=\\\"!isLoggedIn\\\" class=\\\"nav-item mr-0\\\">\\n            <a routerLink=\\\"/login\\\" class=\\\"btn btn-sm rounded-pill rounded-pill d-lg-inline-flex\\\"\\n              [ngClass]=\\\"{'btn-white': headerTheme === 'dark', 'btn-primary': headerTheme === 'light'}\\\">\\n              <span class=\\\"btn-inner--text\\\">Login</span>\\n            </a>\\n          </li>\\n\\n          <li *ngIf=\\\"isLoggedIn && user$ | async\\\" class=\\\"nav-item dropdown dropdown-animate\\\" data-toggle=\\\"hover\\\">\\n            <a class=\\\"nav-link dropdown-toggle\\\" routerLink=\\\"/account/dashboard\\\" data-toggle=\\\"dropdown\\\"\\n              aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              <i class=\\\"fas fa-user-circle\\\"></i> {{ (user$ | async).firstName }}\\n            </a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right dropdown-menu-arrow p-0\\\">\\n              <ul class=\\\"list-group list-group-flush\\\">\\n                <li>\\n                  <a class=\\\"list-group-item list-group-item-action\\\" routerLink=\\\"/account/dashboard\\\">\\n                    <div class=\\\"media d-flex align-items-center\\\">\\n                      <i class=\\\"fas fa-id-card\\\"></i>\\n\\n                      <div class=\\\"media-body ml-3\\\">\\n                        <h6 class=\\\"mb-0\\\">Dashboard</h6>\\n                      </div>\\n                    </div>\\n                  </a>\\n                </li>\\n                <li>\\n                  <a class=\\\"list-group-item list-group-item-action\\\" routerLink=\\\"/account/inbox\\\">\\n                    <div class=\\\"media d-flex align-items-center\\\">\\n                      <i class=\\\"fas fa-envelope\\\"></i>\\n\\n                      <div class=\\\"media-body ml-3\\\">\\n                        <h6 class=\\\"mb-0\\\">Inbox</h6>\\n                      </div>\\n                    </div>\\n                  </a>\\n                </li>\\n                <li>\\n                <li>\\n                  <a class=\\\"list-group-item list-group-item-action\\\" routerLink=\\\"/account/notifications\\\">\\n                    <div class=\\\"media d-flex align-items-center\\\">\\n                      <i class=\\\"fas fa-bell\\\"></i>\\n\\n                      <div class=\\\"media-body ml-3\\\">\\n                        <h6 class=\\\"mb-0\\\">Notifications</h6>\\n                      </div>\\n                    </div>\\n                  </a>\\n                </li>\\n                <li>\\n                  <a class=\\\"list-group-item list-group-item-action\\\" routerLink=\\\"/account/settings\\\">\\n                    <div class=\\\"media d-flex align-items-center\\\">\\n                      <i class=\\\"fas fa-cog\\\"></i>\\n\\n                      <div class=\\\"media-body ml-3\\\">\\n                        <h6 class=\\\"mb-0\\\">Settings</h6>\\n                      </div>\\n                    </div>\\n                  </a>\\n                </li>\\n                <!-- <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\n                  <span class=\\\"float-right badge badge-primary\\\">4</span>\\n                  <i class=\\\"fas fa-envelope\\\"></i>Messages\\n                </a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\n                  <i class=\\\"fas fa-cog\\\"></i>Settings\\n                </a>\\n                <div class=\\\"dropdown-divider\\\" role=\\\"presentation\\\"></div>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\n                  <i class=\\\"fas fa-sign-out-alt\\\"></i>Sign out\\n                </a> -->\\n              </ul>\\n\\n              <div class=\\\"dropdown-divider\\\" role=\\\"presentation\\\"></div>\\n\\n              <ul class=\\\"list-group list-group-flush\\\">\\n                <li>\\n                  <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"logout()\\\">\\n                    <div class=\\\"media d-flex align-items-center\\\">\\n                      <i class=\\\"fas fa-sign-out-alt\\\"></i>\\n\\n                      <div class=\\\"media-body ml-3\\\">\\n                        <h6 class=\\\"mb-0\\\">Logout</h6>\\n                      </div>\\n                    </div>\\n                  </a>\\n                </li>\\n              </ul>\\n            </div>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n\\n<app-toast></app-toast>\"","module.exports = \"<!-- <app-toasts aria-live=\\\"polite\\\" aria-atomic=\\\"true\\\"></app-toasts> -->\\n\\n<ngb-toast\\n  *ngFor=\\\"let toast of toastService.toasts\\\"\\n  [class]=\\\"toast.classname\\\"\\n  [autohide]=\\\"true\\\"\\n  [delay]=\\\"toast.delay || 5000\\\"\\n  (hide)=\\\"toastService.remove(toast)\\\"\\n>\\n  <ng-template [ngIf]=\\\"isTemplate(toast)\\\" [ngIfElse]=\\\"text\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"toast.textOrTpl\\\"></ng-template>\\n  </ng-template>\\n\\n  <ng-template #text>{{ toast.textOrTpl }}</ng-template>\\n</ngb-toast>\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <!-- Header (account) -->\\n  <section class=\\\"header-account-page bg-dark d-flex align-items-end\\\" data-offset-top=\\\"#header-main\\\">\\n    <!-- Header container -->\\n    <div class=\\\"container pt-4 pt-lg-0\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\" col-lg-12\\\">\\n          <!-- Salute + Small stats -->\\n          <div class=\\\"row align-items-center mb-4\\\">\\n            <div class=\\\"col-md-5 mb-4 mb-md-0\\\">\\n              <span class=\\\"h2 mb-0 text-white d-block\\\">Hey, {{ (user$ | async ).firstName }}</span>\\n            </div>\\n            <!-- <div class=\\\"col-auto flex-fill d-none d-xl-block\\\">\\n              <ul class=\\\"list-inline row justify-content-lg-end mb-0\\\">\\n                <li class=\\\"list-inline-item col-sm-4 col-md-auto px-3 my-2 mx-0\\\">\\n                  <span class=\\\"badge badge-dot text-white\\\">\\n                    <i class=\\\"bg-success\\\"></i>Sales\\n                  </span>\\n                  <a class=\\\"d-sm-block h5 text-white font-weight-bold pl-2\\\" href=\\\"#\\\">\\n                    20.5%\\n                    <small class=\\\"fas fa-angle-up text-success\\\"></small>\\n                  </a>\\n                </li>\\n                <li class=\\\"list-inline-item col-sm-4 col-md-auto px-3 my-2 mx-0\\\">\\n                  <span class=\\\"badge badge-dot text-white\\\">\\n                    <i class=\\\"bg-warning\\\"></i>Tasks\\n                  </span>\\n                  <a class=\\\"d-sm-block h5 text-white font-weight-bold pl-2\\\" href=\\\"#\\\">\\n                    5.7%\\n                    <small class=\\\"fas fa-angle-up text-warning\\\"></small>\\n                  </a>\\n                </li>\\n                <li class=\\\"list-inline-item col-sm-4 col-md-auto px-3 my-2 mx-0\\\">\\n                  <span class=\\\"badge badge-dot text-white\\\">\\n                    <i class=\\\"bg-danger\\\"></i>Sales\\n                  </span>\\n                  <a class=\\\"d-sm-block h5 text-white font-weight-bold pl-2\\\" href=\\\"#\\\">\\n                    -3.24%\\n                    <small class=\\\"fas fa-angle-down text-danger\\\"></small>\\n                  </a>\\n                </li>\\n              </ul>\\n            </div> -->\\n          </div>\\n          <!-- Account navigation -->\\n          <div class=\\\"d-flex\\\">\\n            <a routerLink=\\\"/account/dashboard\\\" class=\\\"btn btn-icon btn-group-nav shadow btn-neutral\\\">\\n              <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-id-card\\\"></i></span>\\n              <span class=\\\"btn-inner--text d-none d-md-inline-block\\\">Dashboard</span>\\n            </a>\\n            <div class=\\\"btn-group btn-group-nav shadow ml-auto\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                  <a routerLink=\\\"/account/work-offers\\\" class=\\\"btn btn-neutral btn-icon\\\" data-offset=\\\"0,8\\\">\\n                    <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-list-ul\\\"></i></span>\\n                    <span class=\\\"btn-inner--text d-none d-sm-inline-block\\\">Work Offers</span>\\n                  </a>\\n                </div>\\n\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                  <a routerLink=\\\"/account/shifts\\\" class=\\\"btn btn-neutral btn-icon rounded-right\\\" data-offset=\\\"0,8\\\">\\n                    <span class=\\\"btn-inner--icon\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                    <span class=\\\"btn-inner--text d-none d-sm-inline-block\\\">Shifts</span>\\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"slice\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row row-grid\\\">\\n        <div class=\\\"col-lg-9 order-lg-2\\\">\\n          <router-outlet></router-outlet>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 order-lg-1\\\">\\n          <div data-toggle=\\\"sticky\\\" data-sticky-offset=\\\"30\\\" data-negative-margin=\\\".card-profile-cover\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header py-3\\\">\\n                <span class=\\\"h6\\\">Quick links</span>\\n              </div>\\n              <div class=\\\"list-group list-group-sm list-group-flush\\\">\\n                <a routerLink=\\\"/account/settings\\\" class=\\\"list-group-item list-group-item-action d-flex justify-content-between\\\">\\n                  <div>\\n                    <i class=\\\"fas fa-sliders-h mr-2\\\"></i>\\n                    <span>Account settings</span>\\n                  </div>\\n                  <div>\\n                    <i class=\\\"fas fa-angle-right\\\"></i>\\n                  </div>\\n                </a>\\n                <a routerLink=\\\"/account/billing\\\" class=\\\"list-group-item list-group-item-action d-flex justify-content-between\\\">\\n                  <div>\\n                    <i class=\\\"fas fa-credit-card mr-2\\\"></i>\\n                    <span>Billing &amp; payment</span>\\n                  </div>\\n                  <div>\\n                    <i class=\\\"fas fa-angle-right\\\"></i>\\n                  </div>\\n                </a>\\n                <a routerLink=\\\"/account/inbox\\\" class=\\\"list-group-item list-group-item-action d-flex justify-content-between\\\">\\n                  <div>\\n                    <i class=\\\"fas fa-envelope mr-2\\\"></i>\\n                    <span>Inbox</span>\\n                  </div>\\n                  <div>\\n                    <i class=\\\"fas fa-angle-right\\\"></i>\\n                  </div>\\n                </a>\\n                <a routerLink=\\\"/account/notifications\\\" class=\\\"list-group-item list-group-item-action d-flex justify-content-between\\\">\\n                  <div>\\n                    <i class=\\\"fas fa-bell mr-2\\\"></i>\\n                    <span>Notifications</span>\\n                  </div>\\n                  <div>\\n                    <i class=\\\"fas fa-angle-right\\\"></i>\\n                  </div>\\n                </a>\\n                <a routerLink=\\\"/account/security\\\" class=\\\"list-group-item list-group-item-action d-flex justify-content-between\\\">\\n                  <div>\\n                    <i class=\\\"fas fa-lock mr-2\\\"></i>\\n                    <span>Security</span>\\n                  </div>\\n                  <div>\\n                    <i class=\\\"fas fa-angle-right\\\"></i>\\n                  </div>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n\"","module.exports = \"<div *ngIf=\\\"isUpdated\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  Your credit card has been updated.\\n</div>\\n\\n<div class=\\\"actions-toolbar mb-4\\\">\\n  <h2 class=\\\"mb-1\\\">Billing &amp; Payment</h2>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-7\\\">\\n    <form #checkout=\\\"ngForm\\\" role=\\\"form\\\" (ngSubmit)=\\\"onSubmit(checkout)\\\">\\n      <div id=\\\"card-info\\\" #cardInfo></div>\\n\\n      <div class=\\\"mt-4\\\">\\n        <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"submit\\\"\\n          [disabled]=\\\"(working$ | async)\\\">{{ !(working$ | async) ? 'Update' : 'One moment...' }}</button>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"col-md-5\\\">\\n    <div *ngFor=\\\"let card of (card$ | async)\\\" class=\\\"card card-stats\\\">\\n      <div class=\\\"actions\\\">\\n        <button class=\\\"action-item\\\" title=\\\"Remove credit card\\\" (click)=\\\"removeCard()\\\">\\n          <i class=\\\"fas fa-trash\\\"></i>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"d-flex\\\">\\n          <div>\\n            <div class=\\\"icon icon-sm\\\">\\n              <img src=\\\"assets/img/svg/logos/cc-{{ card.brandSafe}}.svg\\\" [attr.alt]=\\\"card.brand\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"pl-4\\\">\\n            <span class=\\\"d-block h5  mr-2 mb-1\\\">**** **** **** {{ card.last4 }}</span>\\n            <span class=\\\"\\\">Expires: {{ card.exp.month }}/{{ card.exp.year }}</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"(msgError$ | async) as msgError\\\" class=\\\"alert alert-danger mt-4\\\" role=\\\"alert\\\">\\n  {{ msgError }}\\n</div>\"","module.exports = \"<div class=\\\"card hover-shadow-lg\\\">\\n  <div class=\\\"card-body py-3\\\">\\n    <div class=\\\"row row-grid align-items-center\\\">\\n      <div class=\\\"col-lg-8\\\">\\n        <div class=\\\"media align-items-center\\\">\\n          <div class=\\\"avatar avatar-lg rounded-circle mr-3\\\">\\n            <img alt=\\\"Profile picture\\\" [src]=\\\"(user$ | async ).profilePicture\\\">\\n          </div>\\n          <div class=\\\"media-body\\\">\\n            <h5 class=\\\"mb-0\\\">{{ (user$ | async ).firstName }} {{ (user$ | async ).lastName }}</h5>\\n            <div>\\n              <form>\\n                <input type=\\\"file\\\" name=\\\"file-1[]\\\" id=\\\"file-1\\\"\\n                  class=\\\"custom-input-file custom-input-file-link\\\"\\n                  data-multiple-caption=\\\"{count} files selected\\\" multiple />\\n                <!-- <label for=\\\"file-1\\\">\\n                  <span class=\\\"text-white\\\">Change avatar</span>\\n                </label> -->\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-auto flex-fill mt-4 mt-sm-0 text-sm-right d-none d-lg-block\\\">\\n        <a *ngIf=\\\"!isServiceProvider\\\" routerLink=\\\"/account/upgrade\\\" class=\\\"btn btn-sm btn-primary rounded-pill btn-icon shadow\\\">\\n          <span class=\\\"btn-inner--icon\\\"><i class=\\\"far fa-grin-stars\\\"></i></span>\\n          <span class=\\\"btn-inner--text\\\">Become a Service Provider</span>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-calendar></app-calendar>\"","module.exports = \"<div class=\\\"actions-toolbar mb-4\\\">\\n  <h2 class=\\\"mb-1\\\">\\n    <span *ngIf=\\\"!toId\\\">Inbox</span>\\n    <span *ngIf=\\\"toId\\\">Send Message</span>\\n  </h2>\\n</div>\\n\\n<ng-container *ngIf=\\\"!toId\\\">\\n  <div class=\\\"list-group\\\">\\n    <div *ngIf=\\\"!(threads$ | async)\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"d-inline-flex align-items-center\\\">\\n        <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n        <strong>Loading...</strong>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"(threads$ | async) && (threads$ | async).length === 0\\\" class=\\\"list-group-item\\\">\\n      No messages in your inbox.\\n    </div>\\n    <div *ngFor=\\\"let offer of threads$ | async\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"media align-items-center\\\">\\n        <div class=\\\"media-body\\\">\\n          <h6 class=\\\"text-sm d-block text-limit mb-0\\\">{{ offer.title }}</h6>\\n          <span class=\\\"d-block text-sm text-muted\\\">{{ offer.startTimeLocal | date:'longDate' }} at\\n            {{ offer.startTimeLocal | date:'shortTime' }}</span>\\n          <!-- <span class=\\\"badge badge-dark badge-pill mt-2\\\">{{ offer.wage | currency}} / hour</span> -->\\n        </div>\\n\\n        <div class=\\\"media-body text-right\\\">\\n          <span class=\\\"text-sm text-dark font-weight-bold ml-3\\\">{{ offer.wage | currency}} / hour</span>\\n        </div>\\n\\n        <div class=\\\"media-body text-right\\\">\\n          <a routerLink=\\\"/work-offer/{{offer.id}}\\\">\\n            View\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"toId\\\">\\n  <ng-container *ngIf=\\\"user$ | async as user\\\">\\n    <p>To: <span class=\\\"ml-2\\\"><img [src]=\\\"user.profilePicture\\\" class=\\\"avatar rounded-circle avatar-sm mr-1\\\" alt=\\\"\\\"> {{ user.firstName }}</span></p>\\n    <textarea class=\\\"form-control\\\" placeholder=\\\"Your message...\\\" rows=\\\"4\\\" resize=\\\"none\\\"></textarea>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary mt-3\\\">\\n      Send\\n    </button>\\n  </ng-container>\\n</ng-container>\\n\"","module.exports = \"<div class=\\\"actions-toolbar mb-4\\\">\\n    <h2 class=\\\"mb-1\\\">Notifications</h2>\\n  </div>\\n  \\n  <div class=\\\"list-group\\\">\\n    <div *ngIf=\\\"!(notifications$ | async)\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"d-inline-flex align-items-center\\\">\\n        <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n        <strong>Loading...</strong>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"(notifications$ | async) && (notifications$ | async).length === 0\\\" class=\\\"list-group-item\\\">\\n      No notifications.\\n    </div>\\n    <div *ngFor=\\\"let notification of notifications$ | async\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"media align-items-center\\\">\\n        <div class=\\\"media-body\\\">\\n          <h6 class=\\\"text-sm d-block text-limit mb-0\\\">{{ notification.title }}</h6>\\n          <span class=\\\"d-block text-sm text-muted\\\">{{ notification.text }}</span>\\n        </div>\\n  \\n        <div class=\\\"media-body text-right\\\">\\n          <a [href]=\\\"notification.link\\\">\\n            View\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"<div *ngIf=\\\"isUpdated\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  Your password has been updated.\\n</div>\\n\\n<div class=\\\"actions-toolbar mb-4\\\">\\n  <h2 class=\\\"mb-1\\\">Security Settings</h2>\\n</div>\\n\\n<form role=\\\"form\\\" [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Current password</label>\\n        <div class=\\\"input-group input-group-merge\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n          </div>\\n          <input [type]=\\\"showPasswordCurrent ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"********\\\" formControlName=\\\"currentPassword\\\" required>\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-secondary btn-icon\\\" type=\\\"button\\\" (click)=\\\"togglePasswordCurrentVisibility()\\\">\\n              <i class=\\\"fas fa-eye\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">New password</label>\\n        <div class=\\\"input-group input-group-merge\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n          </div>\\n          <input [type]=\\\"showPasswordConfirm ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"********\\\" formControlName=\\\"newPassword\\\" required>\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"togglePasswordConfirmVisibility()\\\">\\n                <i class=\\\"fas fa-eye\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mt-4\\\">\\n    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"submit\\\"\\n      [disabled]=\\\"(working$ | async)\\\">{{ !(working$ | async) ? 'Update' : 'One moment...' }}</button>\\n  </div>\\n</form>\\n\\n<div *ngIf=\\\"(msgError$ | async) as msgError\\\" class=\\\"alert alert-danger mt-4\\\" role=\\\"alert\\\">\\n  {{ msgError }}\\n</div>\"","module.exports = \"<div *ngIf=\\\"isUpdated\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  Your information has been updated.\\n</div>\\n\\n<div class=\\\"actions-toolbar mb-4\\\">\\n  <h2 class=\\\"mb-1\\\">Account Settings</h2>\\n</div>\\n\\n<form role=\\\"form\\\" [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"onSubmit()\\\">\\n  <h5 class=\\\"mb-2 mt-4\\\">Public information</h5>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">About yourself</label>\\n        <textarea class=\\\"form-control\\\" formControlName=\\\"about\\\" placeholder=\\\"My name is {{ (user$ | async).firstName }} and...\\\" rows=\\\"4\\\" resize=\\\"none\\\" maxlength=\\\"500\\\"></textarea>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <h5 class=\\\"mb-2 mt-4\\\">Personal details</h5>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">First name</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" required>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Last name</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" required>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row align-items-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Email</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" required>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Phone number</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" mask=\\\"(000) 000-0000\\\" formControlName=\\\"phoneNumber\\\" required>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Address</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" ngx-google-places-autocomplete [options]=\\\"googlePlacesOptions\\\"\\n          #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" formControlName=\\\"address\\\"\\n          placeholder=\\\"Enter your address\\\" required>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Address line 2 (apartment or unit number)</label>\\n        <input  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"addressLine2\\\">\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mt-4\\\">\\n    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"submit\\\"\\n      [disabled]=\\\"(working$ | async)\\\">{{ !(working$ | async) ? 'Update' : 'One moment...' }}</button>\\n  </div>\\n</form>\\n\\n<div *ngIf=\\\"(msgError$ | async) as msgError\\\" class=\\\"alert alert-danger mt-4\\\" role=\\\"alert\\\">\\n  {{ msgError }}\\n</div>\\n\"","module.exports = \"<div *ngIf=\\\"messageSuccess !== ''\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  {{ messageSuccess }}\\n</div>\\n\\n<div class=\\\"actions-toolbar mb-4\\\">\\n  <h2 class=\\\"mb-1\\\">Shifts</h2>\\n</div>\\n\\n<nav class=\\\"nav nav-pills nav-justified mb-4\\\">\\n  <button class=\\\"nav-item nav-link border-0\\\" [ngClass]=\\\"{'active': activeTab === 1 }\\\" (click)=\\\"setTab(1)\\\">Upcoming</button>\\n  <button class=\\\"nav-item nav-link border-0\\\" [ngClass]=\\\"{'active': activeTab === 2 }\\\" (click)=\\\"setTab(2)\\\">Awaiting Confirmation</button>\\n  <button class=\\\"nav-item nav-link border-0\\\" [ngClass]=\\\"{'active': activeTab === 3 }\\\" (click)=\\\"setTab(3)\\\">Complete</button>\\n</nav>\\n\\n<!-- <div class=\\\"form-group mb-4\\\">\\n  <div class=\\\"input-group input-group-merge\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\">Sort by</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" (change)=\\\"onSortChange($event.target.value)\\\">\\n      <option value=\\\"date-added-oldest\\\">Date added (oldest on top)</option>\\n      <option value=\\\"date-added-newest\\\">Date added (newest on top)</option>\\n      <option value=\\\"date-start-latest\\\">Start date (latest on top)</option>\\n      <option value=\\\"date-start-soonest\\\">Start date (soonest on top)</option>\\n    </select>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"list-group\\\">\\n  <div *ngIf=\\\"!(shifts$ | async)\\\" class=\\\"list-group-item\\\">\\n    <div class=\\\"d-inline-flex align-items-center\\\">\\n      <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n      <strong>Loading...</strong>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"(shifts$ | async) && (shifts$ | async).length === 0\\\" class=\\\"list-group-item\\\">\\n    No work offers here.\\n  </div>\\n\\n  <div *ngFor=\\\"let shift of shifts$ | async; let i = index\\\" class=\\\"list-group-item\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <h6 class=\\\"text-sm d-block text-limit mb-1\\\">\\n          <span class=\\\"badge badge-dark badge-pill mr-2\\\">\\n            Shift {{ shift.num }}\\n          </span>\\n\\n          {{ shift.title }}\\n        </h6>\\n        <span class=\\\"d-block text-sm text-muted\\\">{{ shift.startTimeLocal | date:'longDate' }} at\\n          {{ shift.startTimeLocal | date:'shortTime' }}</span>\\n      </div>\\n\\n      <div class=\\\"media-body text-right\\\">\\n        <ng-container *ngIf=\\\"shift.isServiceProvider\\\">\\n          <ng-container *ngIf=\\\"!shift.isComplete\\\">\\n            <button *ngIf=\\\"!shift.isClockedIn\\\" class=\\\"btn btn-outline-success btn-sm\\\" (click)=\\\"clockIn(shift.id, i)\\\"\\n              [disabled]=\\\"(working$ | async)\\\">\\n              {{ !(working$ | async) ? 'Clock In' : 'Clocking in...' }}\\n            </button>\\n          \\n            <button *ngIf=\\\"shift.isClockedIn\\\" class=\\\"btn btn-outline-dark btn-sm\\\" (click)=\\\"clockOut(shift.id, i)\\\"\\n              [disabled]=\\\"(working$ | async)\\\">\\n              {{ !(working$ | async) ? 'Clock Out' : 'Clocking out...' }}\\n            </button>\\n          </ng-container>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!shift.isServiceProvider\\\">\\n          <span *ngIf=\\\"!shift.isClockedIn\\\" class=\\\"text-muted\\\">Awaiting clock in</span>\\n          <span *ngIf=\\\"shift.isClockedIn\\\" class=\\\"text-success\\\">Clocked in</span>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div *ngIf=\\\"isServiceProvider\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  Great! You can now start applying for work.\\n</div>\\n\\n<form *ngIf=\\\"!isServiceProvider\\\" role=\\\"form\\\" [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"actions-toolbar mb-4\\\">\\n    <h2 class=\\\"mb-1\\\">Become a Service Provider</h2>\\n    <p class=\\\"text-sm text-muted mb-0\\\">Please complete this form to start applying to work offers.</p>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Hourly wage</label>\\n        <div class=\\\"input-group input-group-merge\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></span>\\n          </div>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" mask=\\\"comma_separator.2\\\" placeholder=\\\"xx.xx\\\" formControlName=\\\"requestedWage\\\" required>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Maximum distance you’re willing to travel</label>\\n        <div class=\\\"input-group input-group-merge\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">km</span>\\n          </div>\\n          <input type=\\\"text\\\" mask=\\\"comma_separator.2\\\" class=\\\"form-control\\\" formControlName=\\\"travelRadius\\\" required>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Specialty</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"specialty\\\" required>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Official occupation</label>\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Nurse\\\" formControlName=\\\"officialOccupation\\\" required>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Opt in to <a href=\\\"javascript:void(0)\\\" (click)=\\\"openModal(modalCancellation)\\\">cancellation policy</a>?</label>\\n        <select class=\\\"custom-select\\\" formControlName=\\\"cancellationPolicy\\\">\\n          <option value=\\\"1\\\">Yes</option>\\n          <option value=\\\"0\\\">No</option>\\n        </select>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"actions-toolbar py-2 mb-4 mt-4\\\">\\n    <h6 class=\\\"mb-1\\\">Personal information</h6>\\n    <p class=\\\"text-sm text-muted mb-0\\\">This information <strong>WILL NOT</strong> be stored on our server. <br>It is only required to verify where your payments will be deposited.</p>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Social Insurance Number (SIN)</label>\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" mask=\\\"000 000 000\\\" placeholder=\\\"000 000 000\\\" formControlName=\\\"personalIdNumber\\\" required>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"actions-toolbar mb-4 mt-4\\\">\\n    <h6>Bank information</h6>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Transit number</label>\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" mask=\\\"0*\\\" formControlName=\\\"bankTransitNumber\\\" required>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Institution number</label>\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" mask=\\\"0*\\\" formControlName=\\\"bankInstitutionNumber\\\" required>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\">Account number</label>\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" mask=\\\"0*\\\" formControlName=\\\"bankAccountNumber\\\" required>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mt-4\\\">\\n    <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"(working$ | async)\\\">{{ !(working$ | async) ? 'Save' : 'One moment...' }}</button>\\n  </div>\\n</form>\\n\\n<div *ngIf=\\\"(msgError$ | async) as msgError\\\" class=\\\"alert alert-danger mt-4\\\" role=\\\"alert\\\">\\n  {{ msgError }}\\n</div>\\n\\n<ng-template #modalCancellation let-modal>\\n  <div class=\\\"modal-header align-items-center\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Cancellation Policy</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n      <span aria-hidden=\\\"true\\\"><i class=\\\"fas fa-times\\\"></i></span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla malesuada venenatis lorem, non mattis metus dignissim a.\\n    Mauris viverra nunc ut ante dignissim, quis dapibus lectus aliquam. Phasellus malesuada enim eget ipsum posuere, sit\\n    amet consequat ex malesuada. Sed ut porta nisi, ac volutpat ante. Morbi mauris ex, sagittis ac odio sed, congue\\n    consectetur est. Integer tincidunt augue vitae placerat maximus. Suspendisse auctor ante sed felis aliquet egestas. Ut\\n    eu diam ex. Ut fringilla sem lectus, nec gravida felis sodales et. Vivamus sit amet suscipit magna.</p>\\n  </div>\\n</ng-template>\\n\"","module.exports = \"<div *ngIf=\\\"messageSuccess !== ''\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  {{ messageSuccess }}\\n</div>\\n\\n<div class=\\\"actions-toolbar mb-4\\\">\\n  <h2 class=\\\"mb-1\\\">Work Offers</h2>\\n</div>\\n\\n<nav class=\\\"nav nav-pills nav-justified mb-4\\\">\\n  <button class=\\\"nav-item nav-link border-0\\\" [ngClass]=\\\"{'active': activeTab === 1 }\\\" (click)=\\\"setTab(1)\\\">Awaiting\\n    Service Provider</button>\\n  <button class=\\\"nav-item nav-link border-0\\\" [ngClass]=\\\"{'active': activeTab === 2 }\\\" (click)=\\\"setTab(2)\\\">Awaiting\\n    Approval</button>\\n</nav>\\n\\n<div class=\\\"form-group mb-4\\\">\\n  <div class=\\\"input-group input-group-merge\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\">Sort by</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" (change)=\\\"onSortChange($event.target.value)\\\">\\n      <option value=\\\"date-added-oldest\\\">Date added (oldest on top)</option>\\n      <option value=\\\"date-added-newest\\\">Date added (newest on top)</option>\\n      <option value=\\\"date-start-latest\\\">Start date (latest on top)</option>\\n      <option value=\\\"date-start-soonest\\\">Start date (soonest on top)</option>\\n    </select>\\n  </div>\\n</div>\\n\\n<div class=\\\"list-group\\\">\\n  <!-- As Client -->\\n  <h5 class='mb-2'>As Client</h5>\\n\\n  <div *ngIf=\\\"!(workOffersClient$ | async)\\\" class=\\\"list-group-item\\\">\\n    <div class=\\\"d-inline-flex align-items-center\\\">\\n      <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n      <strong>Loading...</strong>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"(workOffersClient$ | async) && (workOffersClient$ | async).length === 0\\\" class=\\\"list-group-item\\\">\\n    No work offers here.\\n  </div>\\n\\n  <div *ngFor=\\\"let offer of workOffersClient$ | async\\\" class=\\\"list-group-item\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <h6 class=\\\"text-sm d-block text-limit mb-1\\\"><img alt=\\\"\\\" [src]=\\\"offer.profilePicture\\\"\\n          class=\\\"avatar rounded-circle avatar-sm mr-1\\\"> {{ offer.title }}</h6>\\n        <span class=\\\"d-block text-sm text-muted\\\">{{ offer.startTimeLocal | date:'longDate' }} at\\n          {{ offer.startTimeLocal | date:'shortTime' }}</span>\\n        <span class=\\\"d-block text-sm text-muted\\\">{{ offer.wage | currency}} / hour</span>\\n        <div *ngIf=\\\"offer.idServiceProviderUser\\\" class=\\\"text-m mt-2\\\">\\n          <a class=\\\"mr-3\\\" target=\\\"_blank\\\" routerLink=\\\"/profile/{{offer.idServiceProviderUser}}\\\"><i class=\\\"fas fa-user\\\"></i></a>\\n          <a href=\\\"#\\\"><i class=\\\"fas fa-envelope\\\"></i></a>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"media-body text-right\\\">\\n        <a routerLink=\\\"/work-offer/{{offer.id}}\\\" class=\\\"btn btn-outline-primary btn-sm\\\">\\n          View\\n        </a>\\n\\n        <button *ngIf=\\\"offer.idWorkMessage\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"acceptWorkMessage(offer.idWorkMessage, offer.serviceProviderName, offer.title)\\\" [disabled]=\\\"(working$ | async)\\\">\\n          {{ !(working$ | async) ? 'Accept' : 'One moment...' }}\\n        </button>\\n\\n        <button *ngIf=\\\"offer.idWorkMessage\\\" routerLink=\\\"/work-offer/{{offer.id}}\\\" class=\\\"btn btn-dark btn-sm\\\">\\n          Decline\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- As Service Provider -->\\n  <ng-container *ngIf=\\\"(showAsServiceProvider$ | async) && isServiceProvider\\\">\\n    <h5 class='mb-2 mt-4'>As Service Provider</h5>\\n\\n    <div *ngIf=\\\"!(workOffersServiceProvider$ | async)\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"d-inline-flex align-items-center\\\">\\n        <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n        <strong>Loading...</strong>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"(workOffersServiceProvider$ | async) && (workOffersServiceProvider$ | async).length === 0\\\" class=\\\"list-group-item\\\">\\n      No work offers here.\\n    </div>\\n\\n    <div *ngFor=\\\"let offer of workOffersServiceProvider$ | async\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"media align-items-center\\\">\\n        <div class=\\\"media-body\\\">\\n          <h6 class=\\\"text-sm d-block text-limit mb-1\\\"><img alt=\\\"\\\" [src]=\\\"offer.profilePicture\\\"\\n              class=\\\"avatar rounded-circle avatar-sm mr-1\\\"> {{ offer.title }}</h6>\\n          <span class=\\\"d-block text-sm text-muted\\\">{{ offer.startTimeLocal | date:'longDate' }} at\\n            {{ offer.startTimeLocal | date:'shortTime' }}</span>\\n          <span class=\\\"d-block text-sm text-muted\\\">{{ offer.wage | currency}} / hour</span>\\n        </div>\\n\\n        <div class=\\\"media-body text-right\\\">\\n          <a routerLink=\\\"/work-offer/{{offer.id}}\\\">\\n            View\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n</div>\\n\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <section class=\\\"slice slice-lg min-vh-100 d-flex align-items-center bg-cover bg-size--cover\\\" style=\\\"background-image: url('../../assets/img/backgrounds/bg-auth.jpg');\\\">\\n      <span class=\\\"mask bg-dark opacity-8\\\"></span>\\n      <div class=\\\"container py-5 px-md-0 d-flex align-items-center\\\">\\n      <div class=\\\"w-100\\\">\\n        <div class=\\\"row row-grid justify-content-center justify-content-lg-between align-items-center\\\">\\n          <div class=\\\"col-sm-8 col-lg-6 col-xl-5 order-lg-2\\\">\\n            <div class=\\\"card shadow zindex-100 mb-0\\\">\\n              <div class=\\\"card-body px-md-5 py-5\\\">\\n                <ng-container *ngIf=\\\"isVerified; else verifying\\\">\\n                  <div class=\\\"mb-4\\\">\\n                    <h6 class=\\\"h3\\\">Login</h6>\\n                    <p *ngIf=\\\"!verificationMessage\\\" class=\\\"text-muted mb-0\\\">Sign in to your account to continue.</p>\\n                    <p *ngIf=\\\"verificationMessage\\\" class=\\\"text-success mb-0\\\">{{ verificationMessage }}</p>\\n                  </div>\\n\\n                  <div *ngIf=\\\"(msgError$ | async) as msgError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                    {{ msgError }}\\n                  </div>\\n\\n                  <span class=\\\"clearfix\\\"></span>\\n\\n                  <form role=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"form-control-label\\\">Email address</label>\\n                      <div class=\\\"input-group input-group-merge\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"name@example.com\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginData.email\\\">\\n                      </div>\\n                    </div>\\n                    <div class=\\\"form-group mb-4\\\">\\n                      <div class=\\\"d-flex align-items-center justify-content-between\\\">\\n                        <div>\\n                          <label class=\\\"form-control-label\\\">Password</label>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"input-group input-group-merge\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"********\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginData.password\\\">\\n                      </div>\\n                      <div class=\\\"mt-2 text-right\\\">\\n                        <a routerLink=\\\"/recover\\\" class=\\\"small text-muted text-underline--dashed border-primary\\\">Forgot password?</a>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"mt-4\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary btn-icon rounded-pill\\\" [disabled]=\\\"(working$ | async)\\\">\\n                        <span class=\\\"btn-inner--text\\\">{{ !(working$ | async) ? 'Login' : 'One moment...' }}</span>\\n                        <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-long-arrow-alt-right\\\"></i></span>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </ng-container>\\n\\n                <ng-template #verifying>\\n                  <div class=\\\"d-flex align-items-center\\\">\\n                    <strong>Verifying...</strong>\\n                    <div class=\\\"spinner-border ml-auto\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></div>\\n                  </div>\\n                </ng-template>\\n              </div>\\n\\n              <div class=\\\"card-footer px-md-5\\\"><small>Not registered?</small>&nbsp;<a routerLink=\\\"/register\\\" class=\\\"small font-weight-bold\\\">Create account</a></div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-5 order-lg-1 d-none d-lg-block text-white\\\">\\n            <blockquote>\\n              <h3 class=\\\"h2 mb-4 text-white\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam nisl elit, euismod vel mi eget, viverra sollicitudin dolor.</h3>\\n              <footer>— <cite class=\\\"text-lg text-white\\\">Nulla facilisi</cite></footer>\\n            </blockquote>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n</div>\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <section class=\\\"slice slice-lg min-vh-100 d-flex align-items-center bg-cover bg-size--cover\\\"\\n    style=\\\"background-image: url('../../assets/img/backgrounds/bg-auth.jpg');\\\">\\n    <span class=\\\"mask bg-dark opacity-8\\\"></span>\\n    <div class=\\\"container py-5 px-md-0 d-flex align-items-center\\\">\\n      <div class=\\\"w-100\\\">\\n        <div class=\\\"row row-grid justify-content-center justify-content-lg-between align-items-center\\\">\\n          <div class=\\\"col-sm-8 col-lg-6 col-xl-5 order-lg-2\\\">\\n            <div class=\\\"card shadow zindex-100 mb-0\\\">\\n              <div class=\\\"card-body px-md-5 py-5\\\">\\n                <div class=\\\"mb-4\\\">\\n                  <h6 class=\\\"h3\\\">Password reset</h6>\\n                  <p *ngIf=\\\"recoverStep == 1\\\" class=\\\"text-muted mb-0\\\">Enter your email below to proceed.</p>\\n                  <p *ngIf=\\\"recoverStep == 2\\\" class=\\\"text-muted mb-0\\\">We emailed you a reset code. Please enter it below.</p>\\n                </div>\\n\\n                <span class=\\\"clearfix\\\"></span>\\n\\n                <div *ngIf=\\\"(msgError$ | async) as msgError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                  {{ msgError }}\\n                </div>\\n\\n                <!-- Step 1 -->\\n                <form *ngIf=\\\"recoverStep == 1\\\" [formGroup]=\\\"formGroup1\\\" (validSubmit)=\\\"onSubmit(1)\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Email address</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"name@example.com\\\" formControlName=\\\"email\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"mt-4\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary btn-icon rounded-pill\\\" [disabled]=\\\"(working$ | async)\\\">\\n                      <span class=\\\"btn-inner--text\\\">{{ !(working$ | async) ? 'Next' : 'Sending reset code...' }}</span>\\n                      <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-long-arrow-alt-right\\\"></i></span>\\n                    </button>\\n                  </div>\\n                </form>\\n\\n                <!-- Step 2 -->\\n                <form *ngIf=\\\"recoverStep == 2\\\" [formGroup]=\\\"formGroup2\\\" (validSubmit)=\\\"onSubmit(2)\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Reset code</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <!-- <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                      </div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"token\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"mt-4\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary btn-icon rounded-pill\\\">\\n                      <span class=\\\"btn-inner--text\\\">Next</span>\\n                      <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-long-arrow-alt-right\\\"></i></span>\\n                    </button>\\n                  </div>\\n                </form>\\n\\n                <!-- Step 3 -->\\n                <form *ngIf=\\\"recoverStep == 3\\\" [formGroup]=\\\"formGroup3\\\" (validSubmit)=\\\"onSubmit(3)\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Password</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n                      </div>\\n                      <input [type]=\\\"showPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"********\\\" formControlName=\\\"password\\\" required>\\n                      <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"togglePasswordVisibility()\\\">\\n                          {{ showPassword ? 'Hide' : 'Show' }}\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"mt-4\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary btn-icon rounded-pill\\\" [disabled]=\\\"(working$ | async)\\\">\\n                      <span class=\\\"btn-inner--text\\\">{{ !(working$ | async) ? 'Reset password' : 'Resetting...' }}</span>\\n                      <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-long-arrow-alt-right\\\"></i></span>\\n                    </button>\\n                  </div>\\n                </form>\\n\\n                <!-- Step 4 -->\\n                <ng-container *ngIf=\\\"recoverStep === 4\\\">\\n                  <p>Password reset! You can now <a routerLink=\\\"/login\\\">login</a>.</p>\\n                </ng-container>\\n              </div>\\n\\n              <div class=\\\"card-footer px-md-5\\\"><small>Not registered?</small>&nbsp;<a routerLink=\\\"/register\\\" class=\\\"small font-weight-bold\\\">Create account</a></div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-5 order-lg-1 d-none d-lg-block text-white\\\">\\n            <blockquote>\\n              <h3 class=\\\"h2 mb-4 text-white\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam nisl elit,\\n                euismod vel mi eget, viverra sollicitudin dolor.</h3>\\n              <footer>— <cite class=\\\"text-lg text-white\\\">Nulla facilisi</cite></footer>\\n            </blockquote>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n</div>\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <section class=\\\"slice slice-lg min-vh-100 d-flex align-items-center bg-cover bg-size--cover\\\" style=\\\"background-image: url('../../assets/img/backgrounds/bg-auth.jpg');\\\">\\n    <span class=\\\"mask bg-dark opacity-8\\\"></span>\\n    <div class=\\\"container py-5 px-md-0 d-flex align-items-center\\\">\\n      <div class=\\\"w-100\\\">\\n        <div class=\\\"row row-grid justify-content-center justify-content-lg-between align-items-center\\\">\\n          <div class=\\\"col-sm-8 col-lg-6 col-xl-5 order-lg-2\\\">\\n            <div class=\\\"card shadow zindex-100 mb-0\\\">\\n              <div class=\\\"card-body px-md-5 py-5\\\">\\n                <div class=\\\"mb-4\\\">\\n                  <h6 class=\\\"h3\\\">Create account</h6>\\n                  <p *ngIf=\\\"registrationStep !== 3\\\" class=\\\"text-muted mb-0\\\">Get started with Caremada.</p>\\n                </div>\\n\\n                <div *ngIf=\\\"(msgError$ | async) as msgError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                  {{ msgError }}\\n                </div>\\n                \\n                <span class=\\\"clearfix\\\"></span>\\n\\n                <!-- Step 1 -->\\n                <form *ngIf=\\\"registrationStep == 1\\\" role=\\\"form\\\" [formGroup]=\\\"formGroup1\\\" (validSubmit)=\\\"onSubmit(1)\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Email address</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"name@example.com\\\" formControlName=\\\"email\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group mb-4\\\">\\n                    <label class=\\\"form-control-label\\\">Password</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n                      </div>\\n                      <input [type]=\\\"showPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"********\\\" formControlName=\\\"password\\\" required>\\n                      <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"togglePasswordVisibility()\\\">\\n                          <i class=\\\"fas fa-eye\\\"></i>\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"mt-4\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary btn-icon rounded-pill\\\">\\n                      <span class=\\\"btn-inner--text\\\">Next</span>\\n                      <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-long-arrow-alt-right\\\"></i></span>\\n                    </button>\\n                  </div>\\n                </form>\\n\\n                <!-- Step 2 -->\\n                <form *ngIf=\\\"registrationStep == 2\\\" role=\\\"form\\\" [formGroup]=\\\"formGroup2\\\" (validSubmit)=\\\"onSubmit(2)\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">First name</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <input id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group mb-4\\\">\\n                    <label class=\\\"form-control-label\\\">Last name</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Date of birth</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <input type=\\\"text\\\" mwlFlatpickr class=\\\"form-control\\\" data-toggle=\\\"date\\\" placeholder=\\\"Select date\\\" formControlName=\\\"birthDate\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Phone number</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" mask=\\\"(000) 000-0000\\\" placeholder=\\\"(xxx) xxx-xxxx\\\" formControlName=\\\"phoneNumber\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Address</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" ngx-google-places-autocomplete [options]=\\\"googlePlacesOptions\\\" #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" formControlName=\\\"address\\\" placeholder=\\\"Enter your address\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Address line 2 (apartment or unit number)</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Optional\\\" formControlName=\\\"addressLine2\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"my-4\\\">\\n                    <div class=\\\"custom-control custom-checkbox mb-3\\\">\\n                      <input id=\\\"check-terms\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"terms\\\" required>\\n                      <label class=\\\"custom-control-label\\\" for=\\\"check-terms\\\">I agree to the <a href=\\\"#\\\">terms and conditions</a></label>\\n                    </div>\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\n                      <input id=\\\"check-privacy\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"privacy\\\" required>\\n                      <label class=\\\"custom-control-label\\\" for=\\\"check-privacy\\\">I agree to the <a href=\\\"#\\\">privacy policy</a></label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"mt-4\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary btn-icon rounded-pill\\\" (click)=\\\"onBack()\\\">\\n                      <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-long-arrow-alt-left\\\"></i></span>\\n                      <span class=\\\"btn-inner--text\\\">Back</span>\\n                    </button>\\n\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary btn-icon rounded-pill\\\" [disabled]=\\\"(working$ | async)\\\">\\n                      <span *ngIf=\\\"(working$ | async)\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n                      <span class=\\\"btn-inner--text\\\">{{ !(working$ | async) ? 'Create my account' : 'One moment...' }}</span>\\n                      <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-long-arrow-alt-right\\\"></i></span>\\n                    </button>\\n                  </div>\\n                </form>\\n\\n                <!-- Step 3 -->\\n                <ng-container *ngIf=\\\"registrationStep === 3\\\">\\n                  <p>Welcome to Caremada!</p>\\n                  <p>Before you can sign in, you’ll need to activate your account.</p>\\n                  <p>We’ve sent you an email with an activation link.</p>\\n                </ng-container>\\n              </div>\\n\\n              <div class=\\\"card-footer px-md-5\\\"><small>Already have an acocunt?</small>&nbsp;<a routerLink=\\\"/login\\\" class=\\\"small font-weight-bold\\\">Login</a></div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-lg-6 order-lg-1 d-none d-lg-block\\\">\\n            <blockquote>\\n              <h3 class=\\\"h2 mb-4 text-white\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam nisl elit, euismod vel mi eget, viverra sollicitudin dolor.</h3>\\n              <footer>— <cite class=\\\"text-lg text-white\\\">Nulla facilisi</cite></footer>\\n            </blockquote>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n</div>\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <section class=\\\"slice slice-xl bg-cover bg-size--cover pb-300\\\" data-offset-top=\\\"#header-main\\\" style=\\\"background-image: url('../../assets/img/backgrounds/bg-home.jpeg');\\\">\\n      <span class=\\\"mask bg-dark opacity-8\\\"></span>\\n      <div class=\\\"container pt-7\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"text-center\\\">\\n              <h2 class=\\\"display-4 text-white mb-2\\\">Giving families a helping hand.</h2>\\n              <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <p class=\\\"lead text-white lh-180\\\">A place for caregiving professionals to build profiles, \\n                    find work and get paid wherever they are.</p>\\n                  <div _ngcontent-kap-c2=\\\"\\\" class=\\\"mt-5\\\"><a _ngcontent-kap-c2=\\\"\\\" class=\\\"btn btn-white rounded-pill\\\" href=\\\"#\\\"><span _ngcontent-kap-c2=\\\"\\\" class=\\\"btn-inner--text\\\">Find a Service Provider</span></a></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n    <section class=\\\"slice slice-lg pt-lg-0\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"card-group flex-column flex-lg-row\\\">\\n          <div class=\\\"card bg-gradient-primary border-0 px-4 py-5 mt--150\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"h4 text-white\\\">Find a Service Provider</h5>\\n              <p class=\\\"mt-4 mb-0 text-white\\\">\\n                We allow you to find qualified service providers for your loved ones wherever you are.\\n              </p>\\n            </div>\\n          </div>\\n          <div class=\\\"card bg-gradient-dark border-0 px-4 py-5 mt--150\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"h4 text-white\\\">Build a Schedule</h5>\\n              <p class=\\\"mt-4 mb-0 text-white\\\">\\n                Whether a service provider or a client, you can view your bookings in our calendar.\\n              </p>\\n            </div>\\n          </div>\\n          <div class=\\\"card bg-gradient-primary border-0 px-4 py-5 mt--150\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"h4 text-white\\\">eCommerce System</h5>\\n              <p class=\\\"mt-4 mb-0 text-white\\\">\\n                Caremada’s payment system allows for one-click booking and payment.\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n    <section class=\\\"slice slice-lg\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"mb-5 text-center\\\">\\n          <div class=\\\"fluid-paragraph mt-3\\\">\\n            <p class=\\\"lead lh-180\\\">Caremada is a place for caregiving professionals to build profiles, \\n              find work and get paid wherever they are. It allows parents, families \\n              and members to book and pay for service providers who are fully bonded and \\n              have gone through a police records check, whether at home or when \\n              traveling anywhere in the world.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n    <section class=\\\"slice slice-lg\\\">\\n      <div class=\\\"container no-padding\\\">\\n        <div class=\\\"card-deck\\\">\\n          <div class=\\\"card hover-shadow-lg\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"delimiter-bottom pb-3 mb-2\\\">\\n                <h5 class=\\\"mt-2\\\">Search Preferences</h5>\\n              </div>\\n              <p class=\\\"mb-0\\\">Caremada has searchable functionality by location and date for clients seeking service provider and service providers looking for work.</p>\\n            </div>\\n          </div>\\n          <div class=\\\"card hover-shadow-lg\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"delimiter-bottom pb-3 mb-2\\\">\\n                <h5 class=\\\"mt-2\\\">Create a Profile</h5>\\n              </div>\\n              <p class=\\\"mb-0\\\">Quick account creation with verifications, references and reviews.</p>\\n            </div>\\n          </div>\\n          <div class=\\\"card hover-shadow-lg\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"delimiter-bottom pb-3 mb-2\\\">\\n                <h5 class=\\\"mt-2\\\">Dashboard</h5>\\n              </div>\\n              <p class=\\\"mb-0\\\">Every user gets access to a dashboard that provides stats on your account.</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </div>\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <!-- Header (account) -->\\n  <section class=\\\"header-account-page bg-dark d-flex align-items-end\\\" data-offset-top=\\\"#header-main\\\">\\n    <!-- Header container -->\\n    <div class=\\\"container pt-4 pt-lg-0\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\" col-lg-12\\\">\\n          <!-- Salute + Small stats -->\\n          <div *ngIf=\\\"(user$ | async) as user\\\" class=\\\"row align-items-center mb-4\\\">\\n            <div class=\\\"col-md-5 mb-4 mb-md-0\\\">\\n              <span class=\\\"h2 mb-0 text-white d-block\\\">{{ user.firstName }} from {{ user.location.city }}</span>\\n            </div>\\n            <div class=\\\"col-auto flex-fill d-none d-xl-block\\\">\\n              <ul class=\\\"list-inline row justify-content-lg-end mb-0\\\">\\n                <li class=\\\"list-inline-item col-sm-4 col-md-auto m-0\\\">\\n                  <div class=\\\"d-sm-block h5 text-white font-weight-bold pl-2 m-0\\\">\\n                    <span *ngIf=\\\"user.totalReviews === 0\\\">\\n                      <i class=\\\"far fa-star\\\"></i><i class=\\\"far fa-star\\\"></i><i class=\\\"far fa-star\\\"></i><i class=\\\"far fa-star\\\"></i><i class=\\\"far fa-star\\\"></i>\\n                    </span>\\n                    <span *ngIf=\\\"user.totalReviews > 0\\\">\\n                      <i *ngFor=\\\"let i of Arr(user.avgRating).fill(1)\\\" class=\\\"fas fa-star\\\"></i>\\n                      <i *ngFor=\\\"let i of Arr(5-user.avgRating).fill(1)\\\" class=\\\"far fa-star\\\"></i>\\n                    </span>\\n                    &nbsp;\\n                    ({{ user.totalReviews }} reviews)\\n                  </div>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n\\n  <section *ngIf=\\\"(user$ | async) as user; else loading\\\" class=\\\"slice\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n          <div class=\\\"card card-profile border-0\\\">\\n            <div class=\\\"card-profile-cover\\\" [style.backgroundImage]=\\\"'url('+user.profilePicture+')'\\\" style=\\\"background-position: center center; background-size: cover; filter:blur(3px); height: 200px;\\\"></div>\\n            <div class=\\\"mx-auto\\\">\\n              <img alt=\\\"Image placeholder\\\" [src]=\\\"user.profilePicture\\\"\\n                class=\\\"card-profile-image avatar rounded-circle shadow hover-shadow-lg\\\">\\n            </div>\\n            <div class=\\\"card-body p-3 pt-0 text-center\\\">\\n              <h5 class=\\\"mb-0\\\">{{ user.firstName }}</h5>\\n              <span class=\\\"d-block text-muted mb-3\\\">Member since {{ user.registerDate | date:'longDate' }}</span>\\n\\n              <div class=\\\"actions d-flex justify-content-between mt-3 pt-3 px-5 delimiter-top\\\">\\n                <button class=\\\"action-item\\\" (click)=\\\"message()\\\">\\n                  <i class=\\\"fas fa-envelope\\\"></i>\\n                </button>\\n                <a href=\\\"#\\\" class=\\\"action-item\\\">\\n                  <i class=\\\"fas fa-user\\\"></i>\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"action-item\\\">\\n                  <i class=\\\"fas fa-chart-pie\\\"></i>\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"action-item text-danger\\\">\\n                  <i class=\\\"fas fa-trash-alt\\\"></i>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-8\\\">\\n          <p *ngIf=\\\"user.about\\\">{{ user.about }}</p>\\n\\n          <h2 class=\\\"mb-3\\\">Reviews</h2>\\n\\n          <div class=\\\"list-group-item\\\">\\n            No reviews.\\n          </div>\\n\\n          <!-- <div class=\\\"card\\\">\\n            <div class=\\\"card-header pt-4 pb-2\\\">\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <a href=\\\"#\\\" class=\\\"avatar rounded-circle shadow\\\">\\n                  <img alt=\\\"Image placeholder\\\" src=\\\"../../assets/img/theme/light/team-1-800x800.jpg\\\">\\n                </a>\\n                <div class=\\\"avatar-content\\\">\\n                  <h6 class=\\\"mb-0\\\">Bettie Mavis</h6>\\n                  <small class=\\\"d-block text-muted\\\"><i class=\\\"fas fa-clock mr-2\\\"></i>3 hrs ago</small>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <p>Personal profiles are the perfect way for you to grab their attention and persuade recruiters to\\n                continue reading your CV because you’re telling them from the off exactly why they should hire you. Of\\n                course, you’ll need to know how to write an effective statement first, but we’ll get on to that in a\\n                bit.</p>\\n              <div class=\\\"d-lg-flex mt-4\\\">\\n                <a href=\\\"#\\\" class=\\\"d-flex align-items-center mr-lg-5 mb-3 mb-lg-0\\\">\\n                  <div>\\n                    <div class=\\\"icon icon-sm bg-gradient-success text-white rounded-circle icon-shape\\\">\\n                      <i class=\\\"fas fa-user-ninja\\\"></i>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"pl-3\\\">\\n                    <span class=\\\"h6\\\">10 Skills</span>\\n                  </div>\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"d-flex align-items-center mr-lg-5 mb-3 mb-lg-0\\\">\\n                  <div>\\n                    <div class=\\\"icon icon-sm bg-gradient-warning text-white rounded-circle icon-shape\\\">\\n                      <i class=\\\"fas fa-user-friends\\\"></i>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"pl-3\\\">\\n                    <span class=\\\"h6\\\">57 Endorsements</span>\\n                  </div>\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"d-flex align-items-center mr-lg-5 mb-3 mb-lg-0\\\">\\n                  <div>\\n                    <div class=\\\"icon icon-sm bg-gradient-primary text-white rounded-circle icon-shape\\\">\\n                      <i class=\\\"fas fa-award\\\"></i>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"pl-3\\\">\\n                    <span class=\\\"h6\\\">7 Awards</span>\\n                  </div>\\n                </a>\\n              </div>\\n              <div class=\\\"pt-5 mt-5 delimiter-top\\\">\\n                <h6 class=\\\"mb-4\\\">\\n                  <i class=\\\"fas fa-file-signature mr-2\\\"></i>Experience\\n                </h6>\\n                <div class=\\\"timeline timeline-one-side\\\" data-timeline-content=\\\"axis\\\">\\n                  <div class=\\\"timeline-block\\\">\\n                    <span class=\\\"timeline-step border-primary\\\"></span>\\n                    <div class=\\\"timeline-content\\\">\\n                      <small class=\\\"text-muted font-weight-bold\\\">2016 - present</small>\\n                      <h6>Web Developer at Webpixels</h6>\\n                      <p class=\\\"text-sm lh-160\\\">When we strive to become better than we are everything around us becomes\\n                        better too. This is a wider card with supporting text below.</p>\\n                      <div>\\n                        <span class=\\\"badge badge-soft-primary mr-2 mb-2\\\">Bootstrap</span>\\n                        <span class=\\\"badge badge-soft-primary mr-2 mb-2\\\">UI/UX</span>\\n                        <span class=\\\"badge badge-soft-primary mr-2 mb-2\\\">Market Strategy</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"timeline-block\\\">\\n                    <span class=\\\"timeline-step timeline-step-sm border-warning\\\"></span>\\n                    <div class=\\\"timeline-content\\\">\\n                      <small class=\\\"text-muted font-weight-bold\\\">2014 - 2016</small>\\n                      <h6>Front Designer at Google</h6>\\n                      <p class=\\\"text-sm lh-160\\\">When we strive to become better than we are everything around us becomes\\n                        better too. This is a wider card with supporting text below.</p>\\n                      <div>\\n                        <span class=\\\"badge badge-soft-warning mr-2 mb-2\\\">HTML5</span>\\n                        <span class=\\\"badge badge-soft-warning mr-2 mb-2\\\">CSS3</span>\\n                        <span class=\\\"badge badge-soft-warning mr-2 mb-2\\\">Responsive Design</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"timeline-block\\\">\\n                    <span class=\\\"timeline-step timeline-step-sm border-info\\\"></span>\\n                    <div class=\\\"timeline-content\\\">\\n                      <small class=\\\"text-muted font-weight-bold\\\">2013 - 2014</small>\\n                      <h6>Internship at Apple</h6>\\n                      <p class=\\\"text-sm lh-160\\\">When we strive to become better than we are everything around us becomes\\n                        better too. This is a wider card with supporting text below.</p>\\n                      <div>\\n                        <span class=\\\"badge badge-soft-info mr-2 mb-2\\\">Product Design</span>\\n                        <span class=\\\"badge badge-soft-info mr-2 mb-2\\\">Development</span>\\n                        <span class=\\\"badge badge-soft-info mr-2 mb-2\\\">Market Strategy</span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"pt-5 mt-5 delimiter-top\\\">\\n                <h6>\\n                  <i class=\\\"fas fa-user-n mr-2 mb-4\\\"></i>Skills\\n                </h6>\\n                <div>\\n                  <a href=\\\"#\\\" class=\\\"badge badge-lg badge-soft-primary d-inline-block mr-2 mb-2\\\">Web Design</a>\\n                  <a href=\\\"#\\\" class=\\\"badge badge-lg badge-soft-primary d-inline-block mr-2 mb-2\\\">Development</a>\\n                  <a href=\\\"#\\\" class=\\\"badge badge-lg badge-soft-primary d-inline-block mr-2 mb-2\\\">UI/UX</a>\\n                  <a href=\\\"#\\\" class=\\\"badge badge-lg badge-soft-primary d-inline-block mr-2 mb-2\\\">Bootstrap 4</a>\\n                  <a href=\\\"#\\\" class=\\\"badge badge-lg badge-soft-primary d-inline-block mr-2 mb-2\\\">User Experience</a>\\n                  <a href=\\\"#\\\" class=\\\"badge badge-lg badge-soft-primary d-inline-block mr-2 mb-2\\\">Psychology</a>\\n                  <a href=\\\"#\\\" class=\\\"badge badge-lg badge-soft-primary d-inline-block mr-2 mb-2\\\">Photoshop</a>\\n                </div>\\n              </div>\\n              <div class=\\\"pt-5 mt-5 delimiter-top\\\">\\n                <h6 class=\\\"mb-4\\\">\\n                  <i class=\\\"fas fa-user-friends mr-2\\\"></i>Endorsements\\n                </h6>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"card bg-secondary\\\">\\n                      <div class=\\\"p-3\\\">\\n                        <div class=\\\"d-flex align-items-center\\\">\\n                          <div>\\n                            <a href=\\\"#\\\" class=\\\"avatar rounded-circle d-inline-block\\\">\\n                              <img alt=\\\"Image placeholder\\\" src=\\\"../../assets/img/theme/light/team-1-800x800.jpg\\\"\\n                                class=\\\"\\\">\\n                            </a>\\n                          </div>\\n                          <div class=\\\"pl-3\\\">\\n                            <a href=\\\"#\\\" class=\\\"h6 text-sm\\\">Betty Mavis</a><span\\n                              class=\\\"static-rating static-rating-sm d-block\\\"><i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star\\\"></i></span>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"card bg-secondary\\\">\\n                      <div class=\\\"p-3\\\">\\n                        <div class=\\\"d-flex align-items-center\\\">\\n                          <div>\\n                            <a href=\\\"#\\\" class=\\\"avatar rounded-circle d-inline-block\\\">\\n                              <img alt=\\\"Image placeholder\\\" src=\\\"../../assets/img/theme/light/team-2-800x800.jpg\\\"\\n                                class=\\\"\\\">\\n                            </a>\\n                          </div>\\n                          <div class=\\\"pl-3\\\">\\n                            <a href=\\\"#\\\" class=\\\"h6 text-sm\\\">Heather Wright</a><span\\n                              class=\\\"static-rating static-rating-sm d-block\\\"><i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i></span>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"card bg-secondary\\\">\\n                      <div class=\\\"p-3\\\">\\n                        <div class=\\\"d-flex align-items-center\\\">\\n                          <div>\\n                            <a href=\\\"#\\\" class=\\\"avatar rounded-circle d-inline-block\\\">\\n                              <img alt=\\\"Image placeholder\\\" src=\\\"../../assets/img/theme/light/team-3-800x800.jpg\\\"\\n                                class=\\\"\\\">\\n                            </a>\\n                          </div>\\n                          <div class=\\\"pl-3\\\">\\n                            <a href=\\\"#\\\" class=\\\"h6 text-sm\\\">John Sullivan</a><span\\n                              class=\\\"static-rating static-rating-sm d-block\\\"><i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i></span>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"card bg-secondary\\\">\\n                      <div class=\\\"p-3\\\">\\n                        <div class=\\\"d-flex align-items-center\\\">\\n                          <div>\\n                            <a href=\\\"#\\\" class=\\\"avatar rounded-circle d-inline-block\\\">\\n                              <img alt=\\\"Image placeholder\\\" src=\\\"../../assets/img/theme/light/team-4-800x800.jpg\\\"\\n                                class=\\\"\\\">\\n                            </a>\\n                          </div>\\n                          <div class=\\\"pl-3\\\">\\n                            <a href=\\\"#\\\" class=\\\"h6 text-sm\\\">George Squier</a><span\\n                              class=\\\"static-rating static-rating-sm d-block\\\"><i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star\\\"></i>\\n                              <i class=\\\"star fas fa-star\\\"></i></span>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"card bg-secondary\\\">\\n                      <div class=\\\"p-3\\\">\\n                        <div class=\\\"d-flex align-items-center\\\">\\n                          <div>\\n                            <a href=\\\"#\\\" class=\\\"avatar rounded-circle d-inline-block\\\">\\n                              <img alt=\\\"Image placeholder\\\" src=\\\"../../assets/img/theme/light/team-5-800x800.jpg\\\"\\n                                class=\\\"\\\">\\n                            </a>\\n                          </div>\\n                          <div class=\\\"pl-3\\\">\\n                            <a href=\\\"#\\\" class=\\\"h6 text-sm\\\">Jesse Stevens</a><span\\n                              class=\\\"static-rating static-rating-sm d-block\\\"><i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star\\\"></i></span>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"card bg-secondary\\\">\\n                      <div class=\\\"p-3\\\">\\n                        <div class=\\\"d-flex align-items-center\\\">\\n                          <div>\\n                            <a href=\\\"#\\\" class=\\\"avatar rounded-circle d-inline-block\\\">\\n                              <img alt=\\\"Image placeholder\\\" src=\\\"../../assets/img/theme/light/team-6-800x800.jpg\\\"\\n                                class=\\\"\\\">\\n                            </a>\\n                          </div>\\n                          <div class=\\\"pl-3\\\">\\n                            <a href=\\\"#\\\" class=\\\"h6 text-sm\\\">Monroe Parker</a><span\\n                              class=\\\"static-rating static-rating-sm d-block\\\"><i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i>\\n                              <i class=\\\"star fas fa-star voted\\\"></i></span>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div> -->\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n\\n  <ng-template #loading>\\n    <section class=\\\"slice slice-lg\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"d-inline-flex align-items-center\\\">\\n              <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n              <strong>Loading...</strong>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </ng-template>\\n</div>\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <!-- Spotlight -->\\n  <section class=\\\"slice slice-lg bg-gradient-primary\\\" data-offset-top=\\\"#header-main\\\">\\n    <div class=\\\"container pt-5\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8\\\">\\n          <h2 class=\\\"display-4 text-white\\\">\\n            Find a \\n            <ng-container *ngIf=\\\"type === 'work-offer'; then workOffer; else serviceProvider\\\"></ng-container>\\n            <ng-template #workOffer>Work Offer</ng-template>\\n            <ng-template #serviceProvider>Service Provider</ng-template>\\n          </h2>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"slice slice-lg\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <ng-container *ngIf=\\\"type === 'work-offer'\\\">\\n          <div *ngIf=\\\"(workOffers$ | async) && (workOffers$ | async).length === 0\\\" class=\\\"col-12\\\">\\n            No results.\\n          </div>\\n\\n          <div class=\\\"col-xl-3 col-lg-4 col-sm-6\\\">\\n            <a *ngFor=\\\"let workOffer of workOffers$ | async\\\" class=\\\"card hover-shadow-lg hover-translate-y-n10\\\" routerLink=\\\"/work-offer/{{workOffer.id}}\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <h6>{{ workOffer.title }}</h6>\\n                <span class=\\\"badge badge-primary badge-pill d-inline-block mb-3\\\">\\n                  {{ workOffer.careType }}\\n                </span>\\n                <p class=\\\"text-sm\\\">\\n                  {{ workOffer.startTimeLocal | date:'longDate' }}\\n                </p>\\n                <span class=\\\"card-price\\\">{{workOffer.wage | currency}}/hour</span>\\n              </div>\\n            </a>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"type === 'service-provider'\\\">\\n          <div *ngIf=\\\"(serviceProviders$ | async) && (serviceProviders$ | async).length === 0\\\" class=\\\"col-12\\\">\\n            No results.\\n          </div>\\n\\n          <div class=\\\"col-xl-3 col-lg-4 col-sm-6\\\">\\n            <a *ngFor=\\\"let user of serviceProviders$ | async\\\" class=\\\"card hover-shadow-lg hover-translate-y-n10\\\" routerLink=\\\"\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <h6>{{ user.firstName }}</h6>\\n                <!-- <span class=\\\"badge badge-primary badge-pill d-inline-block mb-3\\\">\\n                  {{ workOffer.careType }}\\n                </span> -->\\n                <!-- <p class=\\\"text-sm\\\">\\n                  {{ workOffer.startTimeLocal | date:'longDate' }}\\n                </p> -->\\n                <!-- <span class=\\\"card-price\\\">{{workOffer.wage | currency}}/hour</span> -->\\n              </div>\\n            </a>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </section>\\n</div>\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <!-- Spotlight -->\\n  <section class=\\\"slice slice-lg bg-gradient-primary\\\" data-offset-top=\\\"#header-main\\\">\\n    <div class=\\\"container pt-5\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8\\\">\\n          <h2 class=\\\"display-4 text-white\\\">New Work Offer</h2>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"slice slice-lg\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <ng-container *ngIf=\\\"hasCreditCard === null\\\">\\n          <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n            <div class=\\\"d-inline-flex align-items-center h-100\\\">\\n              <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n              <strong>Loading...</strong>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"hasCreditCard === false\\\">\\n          <div class=\\\"col-12\\\">\\n            <div class=\\\"alert alert-group alert-warning\\\" role=\\\"alert\\\">\\n              <div class=\\\"alert-content\\\">\\n                  You must have a credit card in your account to create a work offer.\\n              </div>\\n              <div class=\\\"alert-action\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" aria-label=\\\"Add Credit Card\\\">Add Credit Card</button>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"hasCreditCard === true\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <form role=\\\"form\\\" [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Title</label>\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"title\\\" maxlength=\\\"100\\\" required>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Description</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"7\\\" formControlName=\\\"description\\\" required></textarea>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Service type</label>\\n                <div class=\\\"input-group\\\">\\n                  <select class=\\\"custom-select\\\" formControlName=\\\"careType\\\">\\n                    <option *ngIf=\\\"!(careTypes$ | async)\\\" disabled selected>Loading...</option>\\n                    <ng-container *ngFor=\\\"let item of careTypes$ | async\\\">\\n                      <option *ngIf=\\\"item.isVisible\\\" [value]=\\\"item.name\\\">{{ item.name }}</option>\\n                    </ng-container>\\n                  </select>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Responsibilities</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"7\\\" formControlName=\\\"responsibilities\\\" required></textarea>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Ward details</label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"wardDetails\\\" required>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Rules</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"7\\\" formControlName=\\\"rules\\\" required></textarea>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Initial meeting address</label>\\n                <div class=\\\"input-group input-group-merge\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-map-marker\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" ngx-google-places-autocomplete [options]=\\\"googlePlacesOptions\\\"\\n                    #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleMeetingLocationChange($event)\\\"\\n                    formControlName=\\\"meetingLocation\\\" placeholder=\\\"\\\" required>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Work location</label>\\n                <div class=\\\"input-group input-group-merge\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-map-marker\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" ngx-google-places-autocomplete [options]=\\\"googlePlacesOptions\\\"\\n                    #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" formControlName=\\\"address\\\"\\n                    placeholder=\\\"\\\" required>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Start time</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"text\\\" mwlFlatpickr class=\\\"form-control\\\" [enableTime]=\\\"true\\\" dateFormat=\\\"Y-m-d H:i\\\"\\n                        formControlName=\\\"startTimeLocal\\\" required>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">End time</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"text\\\" mwlFlatpickr class=\\\"form-control\\\" [enableTime]=\\\"true\\\" dateFormat=\\\"Y-m-d H:i\\\"\\n                        formControlName=\\\"endTimeLocal\\\" required>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Hourly rate</label>\\n                    <div class=\\\"input-group input-group-merge\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></span>\\n                      </div>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" mask=\\\"comma_separator.2\\\" placeholder=\\\"xx.xx\\\"\\n                        formControlName=\\\"wage\\\" required>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\">Continuous?</label>\\n                    <select class=\\\"custom-select\\\" formControlName=\\\"isContinuous\\\">\\n                      <option value=\\\"1\\\">Yes</option>\\n                      <option value=\\\"0\\\">No</option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"mt-4\\\">\\n                <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"submit\\\"\\n                  [disabled]=\\\"(working$ | async)\\\">{{ !(working$ | async) ? 'Save' : 'One moment...' }}</button>\\n              </div>\\n            </form>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </section>\\n</div>\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <!-- Spotlight -->\\n  <section class=\\\"slice slice-lg bg-gradient-primary\\\" data-offset-top=\\\"#header-main\\\">\\n    <div class=\\\"container pt-5\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8\\\" *ngIf=\\\"workOffer$ | async as workOffer\\\">\\n          <h2 class=\\\"display-4 text-white\\\">{{ workOffer.title }}</h2>\\n          <h3 class=\\\"display-5 text-white\\\">{{ workOffer.careType }}</h3>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n\\n  <ng-container *ngIf=\\\"{workOffer: workOffer$ | async, userOffering: userOffering$ | async} as data\\\">\\n    <section *ngIf=\\\"data.workOffer && data.userOffering; else loading\\\" class=\\\"slice slice-lg\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                <div class=\\\"d-flex align-items-center\\\">\\n                  <a routerLink=\\\"/profile/{{data.userOffering.id}}\\\">\\n                    <img alt=\\\"\\\" [src]=\\\"data.userOffering.profilePicture\\\" class=\\\"avatar rounded-circle avatar-lg hover-shadow-lg hover-scale-110\\\">\\n                  </a>\\n\\n                  <div class=\\\"avatar-content ml-3\\\">\\n                    <h6 class=\\\"mb-0\\\">{{ data.userOffering.firstName }}</h6>\\n                    <span class=\\\"badge badge-pill badge-soft-dark mt-2 d-block\\\">Member since {{ data.userOffering.registerDate | date:'longDate' }}</span>\\n                  </div>\\n\\n                  <button *ngIf=\\\"(user$ | async).id !== data.userOffering.id && (user$ | async).isCaregiver && !(didApply$ | async)\\\" type=\\\"button\\\" class=\\\"btn btn-primary ml-auto\\\" [disabled]=\\\"(working$ | async)\\\" (click)=\\\"apply()\\\">\\n                    {{ !(working$ | async) ? 'Apply' : 'One moment...' }}\\n                  </button>\\n\\n                  <div *ngIf=\\\"(didApply$ | async)\\\" class=\\\"alert alert-success mb-0 ml-auto\\\" role=\\\"alert\\\">\\n                    Applied!\\n                  </div>\\n\\n                  <a *ngIf=\\\"!(user$ | async).isCaregiver\\\" routerLink=\\\"/account/upgrade\\\" class=\\\"btn btn-primary ml-auto\\\">\\n                    Become a service provider to apply\\n                  </a>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <p>{{ data.workOffer.description }}</p>\\n\\n                <h6 class=\\\"h6 mt-4\\\">Ward details</h6>\\n                <p>{{ data.workOffer.wardDetails }}</p>\\n\\n                <h6 class=\\\"h6 mt-4\\\">Responsibilities</h6>\\n                <p>{{ data.workOffer.responsibilities }}</p>\\n\\n                <h6 class=\\\"h6 mt-4\\\">Rules</h6>\\n                <p>{{ data.workOffer.rules }}</p>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"card overflow-hidden\\\" data-animate-hover=\\\"2\\\">\\n              <div class=\\\"overflow-hidden\\\">\\n                <agm-map [latitude]=\\\"data.workOffer.lat\\\" [longitude]=\\\"data.workOffer.lng\\\" [scrollwheel]=\\\"false\\\" [disableDoubleClickZoom]=\\\"true\\\"\\n                  [disableDefaultUI]=\\\"true\\\" [clickableIcons]=\\\"false\\\" [mapDraggable]=\\\"false\\\" [streetViewControl]=\\\"false\\\"\\n                  [zoomControl]=\\\"false\\\" [styles]=\\\"mapStyles\\\" [zoom]=\\\"11\\\" style=\\\"height: 300px;\\\">\\n                  <agm-circle [latitude]=\\\"data.workOffer.lat\\\" [longitude]=\\\"data.workOffer.lng\\\" [radius]=\\\"3000\\\" [clickable]=\\\"false\\\"\\n                    fillColor=\\\"#ec6d5f\\\"></agm-circle>\\n                </agm-map>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"row align-items-center mb-4\\\">\\n                  <div class=\\\"col\\\">\\n                    <span class=\\\"badge badge-pill badge-soft-dark\\\">{{ data.workOffer.wage | currency }}&nbsp;/&nbsp;hour</span>\\n                  </div>\\n                  <div class=\\\"col text-right\\\">\\n                    <span class=\\\"badge badge-pill badge-soft-success\\\">{{ data.workOffer.total | currency }}</span>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row align-items-center\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <p class=\\\"text-center text-sm m-0\\\">{{ data.workOffer.startTimeLocal | date:'longDate' }}\\n                      <br>{{ data.workOffer.startTimeLocal | date:'shortTime' }}</p>\\n                  </div>\\n\\n                  <div class=\\\"col-md-2 hidden-sm\\\">\\n                    to\\n                  </div>\\n\\n                  <div class=\\\"col-md-5\\\">\\n                    <p class=\\\"text-center text-sm m-0\\\">{{ data.workOffer.endTimeLocal | date:'longDate' }}\\n                      <br>{{ data.workOffer.endTimeLocal | date:'shortTime' }}</p>\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"data.workOffer.isContinuous\\\" class=\\\"alert alert-warning mt-4\\\" role=\\\"alert\\\">\\n                  <strong>Heads up!</strong> This is a single, contiuous shift, which may include multiple overnight stays.\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </ng-container>\\n\\n  <ng-template #loading>\\n    <section class=\\\"slice slice-lg\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"d-inline-flex align-items-center\\\">\\n              <div class=\\\"spinner-border mr-4\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" fill=\\\"{color: '#ffffff'}\\\"></div>\\n              <strong>Loading...</strong>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </ng-template>\\n</div>\"","module.exports = \"<div class=\\\"row text-center\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-sm btn-dark\\\" mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\">\\n        Previous\\n      </button>\\n      <button class=\\\"btn btn-sm btn-outline-dark\\\" mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\n        Today\\n      </button>\\n      <button class=\\\"btn btn-sm btn-dark\\\" mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\">\\n        Next\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-sm btn-dark\\\" (click)=\\\"setView(CalendarView.Month)\\\" [class.active]=\\\"view === CalendarView.Month\\\">\\n        Month\\n      </button>\\n      <button class=\\\"btn btn-sm btn-dark\\\" (click)=\\\"setView(CalendarView.Week)\\\" [class.active]=\\\"view === CalendarView.Week\\\">\\n        Week\\n      </button>\\n      <button class=\\\"btn btn-sm btn-dark\\\" (click)=\\\"setView(CalendarView.Day)\\\" [class.active]=\\\"view === CalendarView.Day\\\">\\n        Day\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div [ngSwitch]=\\\"view\\\">\\n  <mwl-calendar-month-view *ngSwitchCase=\\\"'month'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events$ | async\\\"\\n    [cellTemplate]=\\\"customCellTemplate\\\">\\n  </mwl-calendar-month-view>\\n  <mwl-calendar-week-view *ngSwitchCase=\\\"'week'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events$ | async\\\">\\n  </mwl-calendar-week-view>\\n  <mwl-calendar-day-view *ngSwitchCase=\\\"'day'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events$ | async\\\">\\n  </mwl-calendar-day-view>\\n</div>\"","module.exports = \"<ngx-smart-modal class=\\\"modal\\\" customClass=\\\"nsm-centered\\\" identifier=\\\"{{ modalIdentifier }}\\\">\\n  <div class=\\\"modal__hero\\\" [style.backgroundImage]=\\\"'url('+ modalHeaderBg +')'\\\">\\n    <h1 class=\\\"modal__hero__title\\\">{{ modalTitle }}</h1>\\n  </div>\\n\\n  <div class=\\\"modal__inner\\\">\\n    <!-- <h1 class=\\\"modal__title\\\">{{ modalTitle }}</h1> -->\\n\\n    <ng-content></ng-content>\\n  </div>\\n</ngx-smart-modal>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Event, NavigationEnd, NavigationError, NavigationStart, Router, RouterOutlet } from '@angular/router';\n\nimport { filter } from 'rxjs/operators';\n\nimport { routeTransition } from '@core/animations';\n\nimport { AuthService } from '@core/services/auth.service';\nimport { BroadcastService } from './core/services/broadcast.service';\nimport { UserService } from '@core/services/user.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  animations: [routeTransition]\n})\nexport class AppComponent {\n  title = 'caremada';\n\n  headerTheme: string;\n\n  user$: Observable<any>;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    private broadcastService: BroadcastService,\n    private router: Router, \n    private userService: UserService,\n    ) {\n    this.user$ = this.userService.user$;\n\n    this.router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n    ).forEach(e => {\n      let headerTheme = this.activatedRoute.root.firstChild.snapshot.data['headerTheme'];\n\n      if (!headerTheme) {\n        headerTheme = 'light';\n      }\n\n      this.headerTheme = headerTheme;\n\n      this.broadcastService.reset();\n    });\n  }\n\n  onActivate(event) {\n    window.scrollTo(0, 0);\n  }\n\n  get isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgModule } from '@angular/core';\n\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation';\n\nimport { AppComponent } from './app.component';\n// import { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { configToaster } from '@configs/toaster.config';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    // ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\n    AppRoutingModule,\n    CoreModule,\n    NgBootstrapFormValidationModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const appSettings = {\n  appTitle: 'Caremada',\n  authKeys: {\n    auth: 'caremada-auth',\n    user: 'caremada-user',\n  }\n};\n","import { trigger, style, animate, state, transition, query, group, animateChild } from '@angular/animations';\n\nconst routeAnimation = [\n  // query('.hero__h1', [\n  //   style({ transform: 'translateY(100px)', opacity: 0 }),\n  // ], { optional: true }),\n  // query('.hero__h1', [\n  //   animate('800ms 0s ease', style({ transform: 'translateY(0)', opacity: 1 })),\n  // ], { optional: true }),\n];\n\nexport const routeTransition =\n  trigger('routeAnimations', [\n    transition('* => *', routeAnimation),\n  ]);\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n  currentYear: number;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.currentYear = new Date().getFullYear();\n  }\n\n}\n","import { AfterViewInit, Component, OnInit, HostListener, Input, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthService } from '@core/services/auth.service';\nimport { WorkOfferService } from '@core/services/work-offer.service';\nimport { UserService } from '@core/services/user.service';\n\nimport { ClientAuthGuard } from '@core/guards/client-auth.guard';\nimport { BehaviorSubject, fromEventPattern } from 'rxjs';\nimport { $ } from 'protractor';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit, AfterViewInit {\n  @Input() headerTheme;\n  \n  isSticky = false;\n\n  // auth$ = null;\n  // user$ = null;\n\n  loginData = {\n    email: 'jasonmac5@gmail.com',\n    password: 'fhRwLiwerf049346',\n    remember: true,\n  };\n\n  user$;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    private workOfferService: WorkOfferService,\n    private clientAuthGuard: ClientAuthGuard,\n    private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    // this.auth$ = this.authService.auth$;\n    // this.user$ = this.userService.userData$;\n\n    this.user$ = this.userService.user$;\n\n    if (this.authService.isLoggedIn()) {\n      this.userService.getSelf().subscribe((resp) => {\n        // console.log(resp);\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    // this.auth$.subscribe((isLoggedIn) => {\n    //   if (isLoggedIn) {\n    //     this.userService.getSelf();\n\n    //     // this.modalLogin.close();\n    //   }\n    // });\n\n\n\n    // this.user$.subscribe((user) => {\n    //   // if (user) {\n    //   //   this.workOfferService.getBookedOffersAsClient();\n    //   //\n    //   //   if (this.userService.isServiceProvider()) {\n    //   //     this.workOfferService.getBookedOffersAsServiceProvider();\n    //   //   }\n    //   // }\n    // });\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll() {\n    if (window.pageYOffset > 50) {\n      this.isSticky = true;\n    } else {\n      this.isSticky = false;\n    }\n  }\n\n  // TODO Temperary... remove when login page is created.\n  login() {\n    this.authService.login(this.loginData).subscribe((resp) => {\n      // this.user$.next(resp.data.user);\n      this.userService.setSelf(resp.data.user);\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.userService.destroySelf();\n\n    this.clientAuthGuard.canActivate(\n      this.activatedRoute.snapshot,\n      this.router.routerState.snapshot\n    );\n  }\n\n  get isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n  get isServiceProvider() {\n    return this.userService.isServiceProvider();\n  }\n}\n","import {\n  animate,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\n\nimport { Component, TemplateRef } from '@angular/core';\n\nimport { ToastService } from '@core/services/toast.service';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  host: {'[class.ngb-toasts]': 'true'},\n  // animations: [\n  //   trigger('flyInOut', [\n  //     state('inactive', style({\n  //       opacity: 0,\n  //     })),\n  //     transition('inactive => active', animate('400ms ease-out', keyframes([\n  //       style({\n  //         transform: 'translateX(-50%) translateY(-20px)',\n  //         opacity: 0,\n  //       }),\n  //       style({\n  //         transform: 'translateX(-50%) translateY(0)',\n  //         opacity: 1,\n  //       }),\n  //     ]))),\n  //     // transition('active => removed', animate('400ms ease-out', keyframes([\n  //     //   style({\n  //     //     opacity: 1,\n  //     //   }),\n  //     //   style({\n  //     //     transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n  //     //     opacity: 0,\n  //     //   }),\n  //     // ]))),\n  //   ]),\n  // ],\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {}\n  \n  isTemplate(toast) { return toast.textOrTpl instanceof TemplateRef; }\n\n  showStandard(msg: string) {\n    this.toastService.show(msg);\n  }\n\n  showSuccess(msg: string) {\n    this.toastService.show(msg, { classname: 'bg-success text-light', delay: 10000 });\n  }\n\n  showDanger(msg: string) {\n    this.toastService.show(msg, { classname: 'bg-danger text-light', delay: 15000 });\n  }\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgbModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\n\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxMaskModule } from 'ngx-mask'\n\nimport { EnsureModuleLoadedOnceGuard } from '@core/module-loaded-once.guard';\nimport { AgmCoreModule } from '@agm/core';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { AccountModule } from '@app/modules/account/account.module';\nimport { AuthModule } from '@modules/auth/auth.module';\nimport { HomeModule } from '@app/modules/home/home.module';\nimport { ProfileModule } from '@app/modules/profile/profile.module';\nimport { SearchModule } from '@app/modules/search/search.module';\nimport { WorkOfferModule } from '@app/modules/work-offer/work-offer.module';\n\nimport { HeaderComponent } from '@core/components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { ToastComponent } from '@core/components/toast/toast.component';\n\nimport { AuthService } from '@core/services/auth.service';\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { CareTypeService } from '@core/services/care-type.service';\nimport { GeoLocationService } from '@core/services/geolocation.service';\nimport { NotificationService } from '@core/services/notification.service';\nimport { ShiftService } from '@core/services/shift.service';\nimport { ThreadService } from '@core/services/thread.service';\nimport { TitleService } from '@core/services/title.service';\nimport { ToastService } from '@core/services/toast.service';\nimport { UserService } from '@core/services/user.service';\nimport { WorkMessageService } from '@core/services/work-message.service';\nimport { WorkOfferService } from '@core/services/work-offer.service';\n\nimport { ClientAuthGuard } from '@core/guards/client-auth.guard';\n\nimport { ErrorHandlerInterceptor } from '@core/interceptors/error-handler.interceptor';\nimport { ApiPrefixInterceptor } from '@core/interceptors/api-prefix.interceptor';\nimport { HttpTokenInterceptor } from '@core/interceptors/http-token.interceptor';\n\n@NgModule({\n  imports: [\n    AccountModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAQL4w7oQ6y58esuR_U4nz5YPGz9_3ec54'\n    }),\n    AuthModule,\n    BrowserAnimationsModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n    CommonModule,\n    HomeModule,\n    ProfileModule,\n    RouterModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    FormsModule,\n    NgbModule,\n    NgbDropdownModule,\n    NgxMaskModule.forRoot(),\n    NgxSmartModalModule.forRoot(),\n    ReactiveFormsModule,\n    SearchModule,\n    SharedModule,\n    WorkOfferModule,\n  ],\n  exports: [\n    HeaderComponent,\n    FooterComponent,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthService,\n    BroadcastService,\n    CareTypeService,\n    ClientAuthGuard,\n    GeoLocationService,\n    NotificationService,\n    ShiftService,\n    ThreadService,\n    ToastService,\n    WorkMessageService,\n    WorkOfferService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpTokenInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true,\n    },\n    TitleService,\n    UserService,\n  ],\n  declarations: [\n    HeaderComponent,\n    ToastComponent,\n    FooterComponent,\n  ],\n  entryComponents: [\n    ToastComponent,\n  ],\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard { // Ensure that CoreModule is only loaded into AppModule\n  // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once).\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule, titleService: TitleService) {\n    super(parentModule);\n    titleService.init();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild } from '@angular/router';\n\nimport { AuthService } from '@core/services/auth.service';\n\n@Injectable()\nexport class ClientAuthGuard implements CanActivate, CanActivateChild {\n  constructor(\n    private router: Router,\n    private authService: AuthService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.chekUser(route, state);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.chekUser(route, state);\n  }\n\n  private chekUser(route, state): boolean {\n    const isLoggedIn = this.authService.isLoggedIn();\n\n    if (isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigateByUrl('/');\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\n\n/**\n * Prefixes all requests with `environment.host`.\n */\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({ url: environment.host + request.url });\n    return next.handle(request);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as observable from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UNAUTHORIZED, BAD_REQUEST, FORBIDDEN } from 'http-status-codes';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { AuthService } from '@core/services/auth.service';\nimport { ToastService } from '@core/services/toast.service';\n\nimport { environment } from '@environments/environment';\n\n/**\n* Adds a default error handler to all requests.\n*/\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(\n    private authService: AuthService,\n    private broadcastService: BroadcastService,\n    private router: Router,\n    private toastService: ToastService,\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(resp: HttpEvent<any>): Observable<HttpEvent<any>> {\n    // if (!environment.production) {\n    //   // Do something with the error\n    //   this.logger.logError('Request error ' + JSON.stringify(response));\n    // }\n\n    if (resp instanceof HttpErrorResponse) {\n      const httpErrorCode = resp['status'];\n\n      switch (httpErrorCode) {\n        case 401:\n          if (this.authService.isLoggedIn()) {\n            this.authService.logout();\n          }\n\n          this.router.navigate(['/']);\n          break;\n        case 403:\n          this.router.navigate(['/login']);\n          break;\n        case 404:\n          this.router.navigate(['/']);\n          break;\n        default:\n          break;\n      }\n\n      // console.log(response);\n\n      // this.toastr.error(response['error']['error']['message']);\n      // this.toastService.show(response['error']['error']['message'], { classname: 'bg-danger', delay: 15000 });\n\n      this.broadcastService.setErrorMsg(resp['error']['error']['message']);\n      this.broadcastService.setWorking(false);\n    }\n\n    // switch (httpErrorCode) {\n    //   case UNAUTHORIZED:\n    //     this.router.navigateByUrl('/auth/login');\n    //     break;\n    //\n    //   case FORBIDDEN:\n    //     this.router.navigateByUrl('/auth/403');\n    //     break;\n    //   // case BAD_REQUEST:\n    //   //    this.showError(error.message);\n    //   //     break;\n    //   default:\n    //\n    //   // this.toasterService.pop('error', appToaster.errorHead, response['error']['error']['message']);\n    // }\n\n\n    // throw response;\n    return observable.empty();\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '@core/services/auth.service';\n\n@Injectable()\nexport class HttpTokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const headersConfig = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    };\n\n    const token = this.authService.getToken();\n\n    if (token) {\n      headersConfig['Authorization'] = `Bearer ${token}`;\n    }\n\n    const request = req.clone({ setHeaders: headersConfig });\n\n    return next.handle(request);\n  }\n}\n","export class EnsureModuleLoadedOnceGuard {\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n\n}\n\nexport function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { appSettings } from '@configs/settings.config';\n\nimport { UserService } from '@core/services/user.service';\n\n@Injectable()\nexport class AuthService {\n  // private authSubject = new BehaviorSubject<boolean>(this.isLoggedIn());\n  // public readonly auth$ = this.authSubject.asObservable();\n\n  constructor(\n    private http: HttpClient, \n    private userService: UserService,\n  ) { }\n\n  /**\n   * Logs in a user.\n   * @param data request body\n   */\n  login(data: any) {\n    const href = `${environment.api.auth}`;\n    const storage = data.remember ? localStorage : sessionStorage;\n\n    return this.http.post(href, data).pipe(\n      tap(\n        (resp: any) => {\n          if (resp.data.token) {\n            storage.setItem(appSettings.authKeys.auth, resp.data.token);\n            this.userService.user = resp.data.user;\n          }\n        }\n      ),\n    );\n  }\n\n  /**\n   * Logs out a user.\n   */\n  logout(): Observable<boolean> {\n    sessionStorage.removeItem(appSettings.authKeys.auth);\n    localStorage.removeItem(appSettings.authKeys.auth);\n\n    // this.authSubject.next(false);\n\n    return observableOf(true);\n  }\n\n  /**\n   * Checks if a user is logged in.\n   * @returns true if logged in, false otherwise\n   */\n  isLoggedIn() {\n    if (localStorage.getItem(appSettings.authKeys.auth) || sessionStorage.getItem(appSettings.authKeys.auth)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Verifies a user's email.\n   * @param data request body\n   */\n  verify(data: any) {\n    const href = `${environment.api.auth}/verification`;\n\n    return this.http.patch(href, data);\n  }\n\n  recover(data: any) {\n    const href = `${environment.api.auth}/recover`;\n\n    return this.http.patch(href, data);\n  }\n\n  /**\n   * Gets the auth token.\n   * @returns the auth token\n   */\n  getToken() {\n    const token = sessionStorage.getItem(appSettings.authKeys.auth) || localStorage.getItem(appSettings.authKeys.auth);\n\n    return token;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BroadcastService {\n  private msgErrorSubject: BehaviorSubject<string>;\n  public msgError$: Observable<string>;\n\n  private workingSubject: BehaviorSubject<boolean>;\n  public working$: Observable<boolean>;\n\n  constructor() {\n    this.reset();\n  }\n\n  setErrorMsg(msg: string) {\n    this.msgErrorSubject.next(msg);\n  }\n\n  setWorking(isWorking: boolean) {\n    this.workingSubject.next(isWorking);\n  }\n\n  reset() {\n    this.msgErrorSubject = new BehaviorSubject<string>(null);\n    this.msgError$ = this.msgErrorSubject.asObservable();\n\n    this.workingSubject = new BehaviorSubject<boolean>(false);\n    this.working$ = this.workingSubject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, map, tap, debounce, distinctUntilChanged } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { appSettings } from '@configs/settings.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CareTypeService {\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets all the care types.\n   * @returns care types\n   */\n  getAll() {\n    const href = `${environment.api.careType}`;\n\n    // return this.http.get(href).pipe(\n    //   map((data: any) => data.data.items.map(item => this.careTypeAdapter.adapt(item))),\n    //   tap((data: any) => {\n    //     // this.careTypesSubject.next(data);\n    //   })\n    // );\n\n    return this.http.get(href);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, map, tap, debounce, distinctUntilChanged } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaregiverService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  /**\n   * Creates a new caregiver.\n   * @param data request body\n   */\n  create(data: any) {\n    const href = `${environment.api.caregivers}`;\n\n    return this.http.post<any>(href, data);\n  }\n\n  /**\n   * Gets a caregiver.\n   * @param id caregiver ID\n   */\n  get(id: number) {\n    const href = `${environment.api.caregivers}/${id}`;\n\n    return this.http.get(href);\n  }\n\n  // TODO Change to GET request with URL params\n  /**\n   * Searches for caregivers.\n   * @param data request body\n   */\n  search(data: any) {\n    const href = `${environment.api.caregivers}/search`;\n\n    return this.http.post(href, data);\n  }\n\n  /**\n   * Updates a caregiver's availability.\n   * @param data request body\n   */\n  updateAvailability(data: any) {\n    const href = `${environment.api.caregivers}/availability`;\n\n    return this.http.post(href, data).pipe(\n      // TODO\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class GeoLocationService {\n  // coordinates: any;\n\n  private positionSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public readonly position$ = this.positionSubject.asObservable();\n\n  constructor() { }\n\n  /**\n   * Sets the current geo position.\n   */\n  public setCurrentPosition() {\n    navigator.geolocation.watchPosition((pos: Position) => {\n      this.positionSubject.next(pos);\n    }),\n      () => {\n        console.log('Position is not available');\n      },\n      {\n        enableHighAccuracy: true\n      };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets all notifications.\n   */\n  getNotifications() {\n    const href = `${environment.api.notifications}`;\n\n    return this.http.get(href);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, map, tap, debounce, distinctUntilChanged } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { appSettings } from '@configs/settings.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShiftService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  /**\n   * Clocks into a shift.\n   * @param id shift ID\n   */\n  clockIn(id: number) {\n    const href = `${environment.api.shifts}/${id}/clock-in`;\n\n    return this.http.patch(href, null);\n  }\n\n  /**\n   * Clocks out of a shift.\n   * @param id shift ID\n   */\n  clockOut(id: number) {\n    const href = `${environment.api.shifts}/${id}/clock-out`;\n\n    return this.http.patch(href, null);\n  }\n\n  /**\n   * Confirms the completion of a shift.\n   * @param id shift ID\n   */\n  confirm(id: number) {\n    const href = `${environment.api.shifts}/${id}/confirm`;\n\n    return this.http.patch(href, null);\n  }\n\n  /**\n   * Gets a shift.\n   * @param  id shift ID\n   */\n  get(id: number) {\n    const href = `${environment.api.shifts}/${id}`;\n\n    return this.http.get(href);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, map, tap, debounce, distinctUntilChanged } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { appSettings } from '@configs/settings.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreadService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n  \n  /**\n   * Creates a new message.\n   * @param id thread ID\n   * @param data request body\n   */\n  createMessage(id: number, data: any) {\n    const href = `${environment.api.threads}/${id}`;\n\n    return this.http.post(href, data);\n  }\n  \n  /**\n   * Creates a new thread.\n   * @param data request body\n   */\n  create(data: any) {\n    const href = `${environment.api.threads}`;\n\n    return this.http.post(href, data);\n  }\n\n  /**\n   * Gets messages for a given thread.\n   * @param id thread ID\n   */\n  getMessages(id: number) {\n    const href = `${environment.api.threads}/${id}`;\n\n    return this.http.get(href).pipe(\n      // TODO\n    );\n  }\n\n  /**\n   * Gets all threads.\n   */\n  getAll() {\n    const href = `${environment.api.threads}`;\n\n    return this.http.get(href);\n  }\n}\n","import { merge } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { appSettings } from '@configs/settings.config';\n\nconst APP_TITLE = appSettings.appTitle;\nconst SEPARATOR = ' | ';\n\n@Injectable()\nexport class TitleService {\n  static ucFirst(string) {\n    if (!string) {\n      return string;\n    }\n\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n  ) { }\n\n  init() {\n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n    // Change page title on navigation or language change, based on route data\n    merge(onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        mergeMap(route => route.data)\n      )\n      .subscribe(event => {\n        const title = event['title'];\n        if (title) {\n          this.titleService.setTitle(`${title} ${SEPARATOR} ${APP_TITLE} `);\n        } else {\n          // If not, we do a little magic on the url to create an approximation\n          return this.router.url.split('/').reduce((acc, frag) => {\n            if (acc && frag) { acc += SEPARATOR; }\n            return this.router.url.split('/').reduce((acc, frag) => {\n              if (acc && frag) { acc += SEPARATOR; }\n              return acc + TitleService.ucFirst(frag);\n            });\n          });\n        }\n      });\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  toasts: any[] = [];\n\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  remove(toast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, first, map, tap, debounce, distinctUntilChanged } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { appSettings } from '@configs/settings.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public readonly user$ = this.userSubject.asObservable();\n\n  // private user: User;\n\n  constructor(private http: HttpClient) { }\n\n  set user(user: any) {\n    this.userSubject.next(user);\n  }\n\n  /**\n   * Reports a user.\n   * @param id user ID\n   */\n  report(id: number) {\n    const href = `${environment.api.users}/${id}/reports`;\n\n    return this.http.post(href, null);\n  }\n\n  /**\n   * Creates a review for a given user.\n   * @param id user ID\n   * @param data request body\n   */\n  createReview(id: number, data: any) {\n    const href = `${environment.api.users}/${id}/reviews`;\n\n    return this.http.post(href, data);\n  }\n\n  /**\n   * Creates a user.\n   * @param registrationData request body\n   */\n  create(data: any) {\n    const href = `${environment.api.users}`;\n\n    return this.http.post(href, data).pipe(\n      tap(\n        (data: any) => {\n          // console.log(data);\n        }\n      ),\n    );\n  }\n\n  /**\n   * Gets all unread notifications.\n   */\n  getNotifiationsUnread() {\n    const href = `${environment.api.users}/me/notifications/unread`;\n\n    return this.http.get(href).pipe(\n      tap(\n        (data: any) => {\n          // console.log(data);\n        }\n      ),\n    );\n  }\n\n  /**\n   * Gets all notifications.\n   */\n  getNotifications() {\n    const href = `${environment.api.users}/me/notifications`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets reviews for a given user.\n   * @param id user ID\n   */\n  getReviews(id: number) {\n    const href = `${environment.api.users}/${id}/reviews`;\n\n    return this.http.get(href).pipe(\n      tap(\n        (data: any) => {\n          // console.log(data);\n        }\n      ),\n    );\n  }\n\n  setSelf(data: any) {\n    this.userSubject.next(data);\n  }\n\n  getCardSelf() {\n    const href = `${environment.api.users}/me/card`;\n\n    return this.http.get(href);\n  }\n\n  deleteCard() {\n    const href = `${environment.api.users}/me/card`;\n    \n    return this.http.delete(href);\n  }\n\n  /**\n   * Gets self.\n   * @param refresh should fetch user from server?\n   */\n  getSelf(refresh: boolean = false) {\n    const href = `${environment.api.users}/me`;\n\n    return this.http.get(href).pipe(\n      // map((data: any) => this.userAdapter.adapt(data.data)),\n      tap((data: any) => {\n        // this.user = data;\n        this.userSubject.next(data.data);\n        // TODO\n      })\n    );\n  }\n\n  /**\n   * Gets self upcoming shifts.\n   */\n  getShiftsUpcoming() {\n    const href = `${environment.api.users}/me/shifts/upcoming`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets self shifts awaiting confirmation.\n   */\n  getShiftsAwaitingConfirmation() {\n    const href = `${environment.api.users}/me/shifts/awaiting-confirmation`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets self completed shifts.\n   */\n  getShiftsComplete() {\n    const href = `${environment.api.users}/me/shifts/complete`;\n\n    return this.http.get(href);\n  }\n\n  // /**\n  //  * Gets the shifts for a given user.\n  //  * @param id user ID\n  //  */\n  // getShifts(id: number) {\n  //   const href = `${environment.api.users}/${id}/shifts`;\n\n  //   return this.http.get(href).pipe(\n  //     // map((data: any) => this.userAdapter.adapt(data.data)),\n  //     tap((data: any) => {\n  //       // this.user = data;\n  //       // this.userDataSubject.next(data);\n  //       // TODO\n  //     })\n  //   );\n  // }\n\n  /**\n   * Gets a user.\n   * @param id user ID\n   */\n  get(id: number) {\n    const href = `${environment.api.users}/${id}`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Resets a user password if forgotten.\n   * Pass the user's email to generate a reset token.\n   * Pass the user's email, reset token and new password to reset it.\n   * @param data request body\n   */\n  resetPassword(data: any) {\n    const href = `${environment.api.users}/password`;\n\n    return this.http.patch(href, data);\n  }\n\n  /**\n   * Updates the user's credentials.\n   * @param data updated credentials data (email and password)\n   */\n  updateCredentials(data: any) {\n    const href = `${environment.api.users}/me/credentials`;\n\n    return this.http.patch(href, data);\n  }\n\n  /**\n   * Updates the user's credit card.\n   * @param data request body\n   */\n  updateCreditCard(data: any) {\n    const href = `${environment.api.users}/me/card`;\n\n    return this.http.put(href, data);\n  }\n\n  /**\n   * Updates a user.\n   * @param data request body\n   */\n  update(data: any) {\n    const href = `${environment.api.users}/me`;\n\n    return this.http.patch(href, data);\n  }\n\n  /**\n   * Destroys the logged in user.\n   */\n  destroySelf() {\n    // this.userDataSubject.next(null);\n    // this.user = null;\n  }\n\n  /**\n   * Checks if logged in user is a service provider.\n   */\n  isServiceProvider() {\n    if (!this.userSubject.getValue()) {\n      return null;\n    }\n\n    return this.userSubject.getValue().isCaregiver;\n  }\n\n  reloadSelf() {\n    const href = `${environment.api.users}/me`;\n\n    this.http.get(href).pipe(\n      first(),\n      // map((data: any) => this.userAdapter.adapt(data.data)),\n      tap((data: any) => {\n        // this.user = data;\n        this.userSubject.next(data);\n        // TODO\n      })\n    ).subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, map, tap, debounce, distinctUntilChanged } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { appSettings } from '@configs/settings.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkMessageService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n  \n  /**\n   * Accepts a work message.\n   * @param id work message ID\n   */\n  accept(id: number) {\n    const href = `${environment.api.workMessages}/${id}/accept`;\n\n    return this.http.patch(href, null);\n  }\n\n  /**\n   * Creates a work message.\n   * @param data request body\n   */\n  create(data: any) {\n    const href = `${environment.api.workMessages}`;\n\n    return this.http.post(href, data);\n  }\n\n  /**\n   * Deletes a work message.\n   * @param id work message ID\n   */\n  delete(id: number) {\n    const href = `${environment.api.workMessages}/${id}`;\n\n    return this.http.delete(href);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { catchError, map, tap, debounce, distinctUntilChanged } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { appSettings } from '@configs/settings.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkOfferService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  /**\n   * Cancels a work offer.\n   * @param id work offer ID\n   */\n  cancel(id: number) {\n    const href = `${environment.api.workOffers}/${id}/cancel`;\n\n    return this.http.patch(href, null);\n  }\n\n  /**\n   * Creates a work offer.\n   * @param data request body\n   */\n  create(data: any) {\n    const href = `${environment.api.workOffers}`;\n\n    return this.http.post(href, data);\n  }\n\n  /**\n   * Deletes a work offer.\n   * @param id work offer ID\n   */\n  delete(id: number) {\n    const href = `${environment.api.workOffers}/${id}`;\n\n    return this.http.delete(href);\n  }\n\n  /**\n   * Gets booked work offers (as client).\n   */\n  getBookedAsClient() {\n    const href = `${environment.api.workOffers}/client/booked`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets booked work offers (as service provider).\n   */\n  getBookedAsServiceProvider() {\n    const href = `${environment.api.workOffers}/service-provider/booked`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets the penalty dollar amount if a work offer is cancelled.\n   * @param id work offer ID\n   */\n  getCancellationPenaltyAmount(id: number) {\n    const href = `${environment.api.workOffers}/${id}/cancel`;\n\n    return this.http.get(href).pipe(\n      // TODO\n    );\n  }\n\n  /**\n   * Gets the shifts for a given work offer.\n   * @param id work offer ID\n   */\n  getShifts(id: number) {\n    const href = `${environment.api.workOffers}/${id}/shifts`;\n\n    return this.http.get(href).pipe(\n      // TODO\n    );\n  }\n\n  /**\n   * Get work offer history (as client).\n   */\n  getHistoryAsClient() {\n    const href = `${environment.api.workOffers}/client/history`;\n\n    return this.http.get(href).pipe(\n      // TODO\n    );\n  }\n\n  /**\n   * Gets work offer history (as service provider).\n   */\n  getHistoryAsServiceProvider() {\n    const href = `${environment.api.workOffers}/service-provider/history`;\n\n    return this.http.get(href).pipe(\n      // TODO\n    );\n  }\n\n  /**\n   * Gets a work offer.\n   * @param id work offer ID\n   */\n  get(id: number) {\n    const href = `${environment.api.workOffers}/${id}`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets work offers awaiting approval (as client).\n   */\n  getAwaitingApprovalAsClient() {\n    const href = `${environment.api.workOffers}/client/awaiting-approval`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets work offer awaiting approval (as service provider).\n   */\n  getAwaitingApprovalAsServiceProvider() {\n    const href = `${environment.api.workOffers}/service-provider/awaiting-approval`;\n\n    return this.http.get(href);\n  }\n\n  /**\n   * Gets work offers that haven't been applied to yet by a service provider.\n   */\n  getAwaitingServiceProvider() {\n    const href = `${environment.api.workOffers}/client/awaiting-service-provider`;\n\n    return this.http.get(href).pipe(\n      // TODO\n    );\n  }\n\n  // TODO Change to GET request with URL params\n  /**\n   * Searches for work offers.\n   * @param query request body\n   */\n  search(data: any) {\n    const href = `${environment.api.workOffers}/search`;\n\n    return this.http.post(href, data).pipe(\n      // TODO\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\nimport { NgxMaskModule } from 'ngx-mask'\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { AccountComponent } from './pages/account/account.component';\nimport { DashboardComponent } from './pages/account/dashboard/dashboard.component';\nimport { AccountRoutingModule } from './account.routing';\nimport { UpgradeComponent } from './pages/account/upgrade/upgrade.component';\nimport { SettingsComponent } from './pages/account/settings/settings.component';\nimport { SecurityComponent } from './pages/account/security/security.component';\nimport { BillingComponent } from './pages/account/billing/billing.component';\nimport { WorkOffersComponent } from './pages/account/work-offers/work-offers.component';\nimport { InboxComponent } from './pages/account/inbox/inbox.component';\nimport { NotificationsComponent } from './pages/account/notifications/notifications.component';\nimport { ShiftsComponent } from './pages/account/shifts/shifts.component';\n\n@NgModule({\n  declarations: [\n    AccountComponent,\n    DashboardComponent,\n    UpgradeComponent,\n    SettingsComponent,\n    SecurityComponent,\n    BillingComponent,\n    WorkOffersComponent,\n    InboxComponent,\n    NotificationsComponent,\n    ShiftsComponent,\n  ],\n  imports: [\n    AccountRoutingModule,\n    FormsModule,\n    CommonModule,\n    GooglePlaceModule,\n    NgBootstrapFormValidationModule,\n    NgxMaskModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  exports: [],\n  providers: [],\n  entryComponents: []\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClientAuthGuard } from '@core/guards/client-auth.guard';\n\nimport { AccountComponent } from './pages/account/account.component';\nimport { DashboardComponent } from './pages/account/dashboard/dashboard.component';\nimport { SettingsComponent } from './pages/account/settings/settings.component';\nimport { UpgradeComponent } from './pages/account/upgrade/upgrade.component';\nimport { SecurityComponent } from './pages/account/security/security.component';\nimport { BillingComponent } from './pages/account/billing/billing.component';\nimport { WorkOffersComponent } from './pages/account/work-offers/work-offers.component';\nimport { InboxComponent } from './pages/account/inbox/inbox.component';\nimport { NotificationsComponent } from './pages/account/notifications/notifications.component';\nimport { ShiftsComponent } from './pages/account/shifts/shifts.component';\n\nexport const routes: Routes = [\n  {\n    path: 'account',\n    component: AccountComponent,\n    canActivate: [ClientAuthGuard],\n    data: { headerTheme: 'dark' },\n    children: [\n      {\n        path: 'billing',\n        component: BillingComponent,\n      },\n      {\n        path: 'dashboard',\n        component: DashboardComponent,\n      },\n      {\n        path: 'inbox',\n        component: InboxComponent,\n      },\n      {\n        path: 'notifications',\n        component: NotificationsComponent,\n      },\n      {\n        path: 'security',\n        component: SecurityComponent,\n      },\n      {\n        path: 'settings',\n        component: SettingsComponent,\n      },\n      {\n        path: 'shifts',\n        component: ShiftsComponent,\n      },\n      {\n        path: 'upgrade',\n        component: UpgradeComponent,\n      },\n      {\n        path: 'work-offers',\n        component: WorkOffersComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n})\nexport class AccountComponent implements OnInit {\n  user$ = null;\n\n  constructor(\n    private userService: UserService,\n  ) {\n\n  }\n\n  // private reset() {\n  //   this.user$ = null;\n  //\n  //   this.workOffersBookedAsServiceProvider$ = null;\n  //   this.workOffersBookedAsClient$ = null;\n  // }\n\n  ngOnInit() {\n    this.user$ = this.userService.user$;\n  }\n\n  isServiceProvider() {\n    return this.userService.isServiceProvider();\n  }\n}\n","import {\n  Component,\n  AfterViewInit,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef\n} from '@angular/core';\n\nimport { NgForm } from '@angular/forms';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { UserService } from '@core/services/user.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\ndeclare const Stripe;\n\n@Component({\n  selector: 'app-billing',\n  templateUrl: './billing.component.html',\n})\nexport class BillingComponent implements AfterViewInit, OnDestroy, OnInit {\n  @ViewChild('cardInfo', {static: true}) cardInfo: ElementRef;\n\n  stripe = Stripe('pk_test_zvdI4ud9WoMrWi404o4y0y1G');\n  elements = this.stripe.elements();\n\n  card: any;\n  cardHandler = this.onChange.bind(this);\n  error: string;\n\n  isUpdated = false;\n\n  working$: Observable<boolean>;\n  msgError$: Observable<string>;\n\n  private cardSubject = new BehaviorSubject<any>(null);\n  card$ = this.cardSubject.asObservable();\n\n  constructor(\n    private broadcastService: BroadcastService,\n    private cd: ChangeDetectorRef, \n    private userService: UserService,\n  ) {}\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    this.userService.getCardSelf().subscribe((resp: any) => {\n      this.cardSubject.next(resp.data.items);\n    });\n  }\n\n  ngAfterViewInit() {\n    this.card = this.elements.create('card');\n    this.card.mount(this.cardInfo.nativeElement);\n\n    this.card.addEventListener('change', this.cardHandler);\n  }\n\n  ngOnDestroy() {\n    this.card.removeEventListener('change', this.cardHandler);\n    this.card.destroy();\n  }\n\n  onChange({ error }) {\n    if (error) {\n      this.error = error.message;\n    } else {\n      this.error = null;\n    }\n    this.cd.detectChanges();\n  }\n\n  async onSubmit(form: NgForm) {\n    this.broadcastService.setWorking(true);\n    \n    const { token, err } = await this.stripe.createToken(this.card);\n\n    if (err) {\n      this.broadcastService.setWorking(false);\n      return;\n    }\n    \n    let data = { token: token };\n\n    this.userService.updateCreditCard(data).subscribe(resp => {\n      this.broadcastService.setErrorMsg(null);\n      this.broadcastService.setWorking(false);\n      this.isUpdated = true;\n      this.userService.reloadSelf();\n      this.userService.getCardSelf().subscribe((resp: any) => {\n        this.cardSubject.next(resp.data);\n      });\n    });\n  }\n\n  removeCard() {\n    // TODO when removing card, ensure there's no work offers associated with it.\n    // If there is, cancel them and warn user about cancellation policy.\n    if(confirm('Are you sure you want to remove your card?')) {\n      this.userService.deleteCard().subscribe(resp => {\n        this.cardSubject.next(null);\n      });\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { WorkOfferService } from '@core/services/work-offer.service';\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit {\n  user$ = null;\n\n  constructor(\n    private workOfferService: WorkOfferService,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.user$ = this.userService.user$;\n  }\n\n  get isServiceProvider() {\n    return this.userService.isServiceProvider();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Event, NavigationEnd, NavigationError, NavigationStart, Router, RouterOutlet } from '@angular/router';\n\nimport { filter } from 'rxjs/operators';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { ThreadService } from '@core/services/thread.service';\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.component.html',\n})\nexport class InboxComponent implements OnInit {\n  private threadsSubject = new BehaviorSubject<any>(null);\n  threads$ = this.threadsSubject.asObservable();\n\n  private userSubject = new BehaviorSubject<any>(null);\n  user$ = this.userSubject.asObservable();\n\n  toId: number = null;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router, \n    private threadService: ThreadService,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(params => {\n      let id = parseInt(params['to']);\n\n      if (!isNaN(id)) {\n        this.toId = id;\n\n        this.userService.get(id).subscribe((resp: any) => {\n          console.log(resp.data);\n          this.userSubject.next(resp.data);\n        });\n      } else {\n        this.threadService.getAll().subscribe((resp: any) => {\n          this.threadsSubject.next(resp.data.items);\n        });\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NotificationService } from '@core/services/notification.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent implements OnInit {\n  private notificationsSubject = new BehaviorSubject<any>(null);\n  notifications$ = this.notificationsSubject.asObservable();\n\n  constructor(private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.notificationService.getNotifications().subscribe((resp: any) => {\n      console.log(resp.data.items);\n      this.notificationsSubject.next(resp.data.items);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { CaregiverService } from '@core/services/caregiver.service';\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-security',\n  templateUrl: './security.component.html',\n})\nexport class SecurityComponent implements OnInit {\n  formGroup: FormGroup;\n\n  securityData = {\n    currentPassword: null,\n    newPassword: null,\n  };\n\n  showPasswordCurrent = false;\n  showPasswordConfirm = false;\n\n  isUpdated = false;\n\n  working$: Observable<boolean>;\n  msgError$: Observable<string>;\n\n  constructor(\n    private broadcastService: BroadcastService,\n    private caregiverService: CaregiverService,\n    private modalService: NgbModal,\n    private router: Router,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    this.formGroup = new FormGroup({\n      'currentPassword': new FormControl(this.securityData.currentPassword, [\n        Validators.required,\n      ]),\n      'newPassword': new FormControl(this.securityData.newPassword, [\n        Validators.required,\n      ]),\n    });\n  }\n\n  togglePasswordCurrentVisibility() {\n    this.showPasswordCurrent = !this.showPasswordCurrent;\n  }\n\n  togglePasswordConfirmVisibility() {\n    this.showPasswordConfirm = !this.showPasswordConfirm;\n  }\n\n  onSubmit() {\n    this.broadcastService.setWorking(true);\n\n    let data = this.formGroup.value;\n\n    this.userService.updateCredentials(data).subscribe(resp => {\n      this.broadcastService.setErrorMsg(null);\n      this.broadcastService.setWorking(false);\n      this.isUpdated = true;\n      this.userService.reloadSelf();\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { CaregiverService } from '@core/services/caregiver.service';\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n})\nexport class SettingsComponent implements OnInit {\n  formGroup: FormGroup;\n\n  settingsData = {\n    about: null,\n    firstName: null,\n    lastName: null,\n    email: null,\n    phoneNumber: null,\n    address: null,\n    addressLine2: null,\n  };\n\n  private addressParts = {\n    addressLine1: null,\n    city: null,\n    area: null,\n    postalCode: null,\n    country: null,\n  };\n\n  googlePlacesOptions = {\n    types: [],\n    componentRestrictions: { country: 'CA' },\n  };\n\n  isUpdated = false;\n\n  user$: Observable<any>;\n  working$: Observable<boolean>;\n  msgError$: Observable<string>;\n\n  constructor(\n    private broadcastService: BroadcastService,\n    private caregiverService: CaregiverService,\n    private modalService: NgbModal,\n    private router: Router,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.user$ = this.userService.user$;\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    this.user$.subscribe(data => {\n      this.settingsData.about = data.about;\n      this.settingsData.firstName = data.firstName;\n      this.settingsData.lastName = data.lastName;\n      this.settingsData.email = data.email;\n      this.settingsData.phoneNumber = data.phone;\n      this.settingsData.address = `${data.location.addressLine1}, ${data.location.city} ${data.location.area}`;\n      this.settingsData.addressLine2 = data.location.addressLine2;\n    });\n\n    this.formGroup = new FormGroup({\n      'about': new FormControl(this.settingsData.about, []),\n      'email': new FormControl(this.settingsData.email, [\n        Validators.required,\n        Validators.email,\n      ]),\n      'firstName': new FormControl(this.settingsData.firstName, [\n        Validators.required,\n      ]),\n      'lastName': new FormControl(this.settingsData.lastName, [\n        Validators.required,\n      ]),\n      'phoneNumber': new FormControl(this.settingsData.phoneNumber, [\n        Validators.required,\n      ]),\n      'address': new FormControl(this.settingsData.address, [\n        Validators.required,\n      ]),\n      'addressLine2': new FormControl(this.settingsData.addressLine2, [\n        // Optional.\n      ]),\n    });\n  }\n\n  handleAddressChange(addr: any) {\n    const addrComponents = addr.address_components;\n\n    for (let comp of addrComponents) {\n      switch (comp.types[0]) {\n        case 'street_number':\n          this.addressParts.addressLine1 += comp.short_name;\n          break;\n        case 'route':\n          this.addressParts.addressLine1 += ' ' + comp.short_name;\n          break;\n        case 'locality':\n          this.addressParts.city = comp.short_name;\n          break;\n        case 'administrative_area_level_1':\n          this.addressParts.area = comp.short_name;\n          break;\n        case 'country':\n          this.addressParts.country = comp.short_name;\n          break;\n        case 'postal_code':\n          this.addressParts.postalCode = comp.short_name;\n          break;\n        default:\n          break;\n      }\n    }\n\n    // this.addressParts.addressLine1 = `${addrComponents[0].long_name} ${addrComponents[1].long_name}`;\n    // this.addressParts.city = addrComponents[2].long_name;\n    // this.addressParts.area = addrComponents[4].short_name;\n    // this.addressParts.country = addrComponents[5].short_name;\n    // this.addressParts.postalCode = addrComponents[6].long_name;\n  }\n\n  onSubmit() {\n    this.broadcastService.setWorking(true);\n\n    let data = { ...this.formGroup.value, ...this.addressParts };\n\n    this.userService.update(data).subscribe(resp => {\n      this.broadcastService.setErrorMsg(null);\n      this.broadcastService.setWorking(false);\n      this.isUpdated = true;\n      this.userService.reloadSelf();\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { ShiftService } from '@core/services/shift.service';\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-shifts',\n  templateUrl: './shifts.component.html',\n})\nexport class ShiftsComponent implements OnInit {\n  private shiftsSubject = new BehaviorSubject<any>(null);\n  shifts$ = this.shiftsSubject.asObservable();\n\n  working$: Observable<boolean>;\n\n  activeTab = 1;\n  messageSuccess = '';\n\n  constructor(\n    private broadcastService: BroadcastService,\n    private shiftService: ShiftService,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n\n    this.setTab(1);\n  }\n\n  setTab(num: number) {\n    switch (num) {\n      case 1:\n        this.fetchUpcoming();\n        this.activeTab = num;\n        break;\n      case 2:\n        this.fetchAwaitingConfirmation();\n        this.activeTab = num;\n        break;\n      case 3:\n        this.fetchComplete();\n        this.activeTab = num;\n        break;\n      default:\n        break;\n    }\n  }\n\n  clockIn(id: number, index: number) {\n    this.broadcastService.setWorking(true);\n\n    this.shiftService.clockIn(id).subscribe((resp: any) => {\n      this.messageSuccess = 'Great! You’re clocked in. Don’t forget to clock out when you’re finished your shift.';\n      this.broadcastService.setWorking(false);\n\n      let shifts = this.shiftsSubject.getValue();\n      shifts[index].isClockedIn = true;\n\n      this.shiftsSubject.next(shifts);\n    });\n  }\n\n  clockOut(id: number) {\n\n  }\n\n  private fetchUpcoming() {\n    this.shiftsSubject.next(null);\n    \n    this.userService.getShiftsUpcoming().subscribe((resp: any) => {\n      this.shiftsSubject.next(resp.data.items);\n    });\n  }\n\n  private fetchAwaitingConfirmation() {\n    this.shiftsSubject.next(null);\n\n    this.userService.getShiftsAwaitingConfirmation().subscribe((resp: any) => {\n      this.shiftsSubject.next(resp.data.items);\n    });\n  }\n\n  private fetchComplete() {\n    this.shiftsSubject.next(null);\n\n    this.userService.getShiftsComplete().subscribe((resp: any) => {\n      this.shiftsSubject.next(resp.data.items);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { CaregiverService } from '@core/services/caregiver.service';\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-upgrade',\n  templateUrl: './upgrade.component.html',\n})\nexport class UpgradeComponent implements OnInit {\n  formGroup: FormGroup;\n\n  caregiverData = {\n    requestedWage: null,\n    travelRadius: null,\n    specialty: null,\n    officialOccupation: null,\n    cancellationPolicy: 1,\n    personalIdNumber: null,\n    bankTransitNumber: null,\n    bankInstitutionNumber: null,\n    bankAccountNumber: null,\n  };\n\n  working$: Observable<boolean>;\n  msgError$: Observable<string>;\n\n  constructor(\n    private broadcastService: BroadcastService,\n    private caregiverService: CaregiverService,\n    private modalService: NgbModal,\n    private router: Router,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    if (this.userService.isServiceProvider()) {\n      this.router.navigate(['/account/dashboard']);\n    }\n\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    this.formGroup = new FormGroup({\n      'requestedWage': new FormControl(this.caregiverData.requestedWage, [\n        Validators.required,\n      ]),\n      'travelRadius': new FormControl(this.caregiverData.travelRadius, [\n        Validators.required,\n      ]),\n      'specialty': new FormControl(this.caregiverData.specialty, [\n        Validators.required,\n      ]),\n      'officialOccupation': new FormControl(this.caregiverData.officialOccupation, [\n        Validators.required,\n      ]),\n      'cancellationPolicy': new FormControl(this.caregiverData.cancellationPolicy),\n      'personalIdNumber': new FormControl(this.caregiverData.personalIdNumber, [\n        Validators.required,\n      ]),\n      'bankTransitNumber': new FormControl(this.caregiverData.bankTransitNumber, [\n        Validators.required,\n      ]),\n      'bankInstitutionNumber': new FormControl(this.caregiverData.bankInstitutionNumber, [\n        Validators.required,\n      ]),\n      'bankAccountNumber': new FormControl(this.caregiverData.bankAccountNumber, [\n        Validators.required,\n      ]),\n    });\n  }\n\n  openModal(modal: any) {\n    this.modalService.open(modal, { centered: true });\n  }\n\n  get isServiceProvider() {\n    return this.userService.isServiceProvider();\n  }\n\n  onSubmit() {\n    this.broadcastService.setWorking(true);\n\n    let data = this.formGroup.value;\n\n    this.caregiverService.create(data).subscribe(resp => {\n      this.broadcastService.setErrorMsg(null);\n      this.userService.reloadSelf();\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { UserService } from '@core/services/user.service';\nimport { WorkMessageService } from '@core/services/work-message.service';\nimport { WorkOfferService } from '@core/services/work-offer.service';\n\n@Component({\n  selector: 'app-work-offers',\n  templateUrl: './work-offers.component.html',\n})\nexport class WorkOffersComponent implements OnInit {\n  private workOffersClientSubject = new BehaviorSubject<any>(null);\n  workOffersClient$ = this.workOffersClientSubject.asObservable();\n\n  private workOffersServiceProviderSubject = new BehaviorSubject<any>(null);\n  workOffersServiceProvider$ = this.workOffersServiceProviderSubject.asObservable();\n\n  private showAsServiceProviderSubject = new BehaviorSubject<boolean>(null);\n  showAsServiceProvider$ = this.showAsServiceProviderSubject.asObservable();\n\n  working$: Observable<boolean>;\n\n  activeTab = 1;\n  messageSuccess = '';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private broadcastService: BroadcastService,\n    private userService: UserService,\n    private workMessageService: WorkMessageService,\n    private workOfferService: WorkOfferService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n\n    this.setTab(1);\n  }\n\n  setTab(num: number) {\n    switch (num) {\n      case 1:\n        this.fetchAwaitingServiceProvider();\n        this.activeTab = num;\n        break;\n      case 2:\n        this.fetchAwaitingApproval();\n        this.activeTab = num;\n        break;\n      default:\n        break;\n    }\n  }\n\n  onSortChange(value: string) {\n    let workOffersClient = this.workOffersClientSubject.getValue();\n    let workOffersServiceProvider = this.workOffersServiceProviderSubject.getValue();\n\n    let workOffersClientSorted = this.sort(workOffersClient, value);\n    this.workOffersClientSubject.next(workOffersClientSorted);\n\n    let workOffersServiceProviderSorted = this.sort(workOffersServiceProvider, value);\n    this.workOffersServiceProviderSubject.next(workOffersServiceProviderSorted);\n  }\n\n  get isServiceProvider() {\n    return this.userService.isServiceProvider();\n  }\n\n  acceptWorkMessage(id: number, name: string, title: string) {\n    this.broadcastService.setWorking(true);\n\n    this.workMessageService.accept(id).subscribe((resp: any) => {\n      this.broadcastService.setWorking(false);\n      this.messageSuccess = `You have accepted ${name} for \"${title}.\"`;\n      this.fetchAwaitingApproval();\n    });\n  }\n\n  private fetchAwaitingServiceProvider() {\n    this.workOffersClientSubject.next(null);\n    this.showAsServiceProviderSubject.next(false);\n\n    this.workOfferService.getAwaitingServiceProvider().subscribe((resp: any) => {\n      this.workOffersClientSubject.next(resp.data.items);\n    });\n  }\n\n  private fetchAwaitingApproval() {\n    this.workOffersClientSubject.next(null);\n    this.workOffersServiceProviderSubject.next(null);\n    this.showAsServiceProviderSubject.next(true);\n \n    this.workOfferService.getAwaitingApprovalAsClient().subscribe((resp: any) => {\n      this.workOffersClientSubject.next(resp.data.items);\n    });\n\n    if (this.isServiceProvider) {\n      this.workOfferService.getAwaitingApprovalAsServiceProvider().subscribe((resp: any) => {\n        this.workOffersServiceProviderSubject.next(resp.data.items);\n      });\n    }\n  }\n\n  private sort(workOffers, value) {\n    switch (value) {\n      case 'date-added-oldest':\n        workOffers.sort((a, b) => {\n          if (Date.parse(a.startTimeLocal) < Date.parse(b.startTimeLocal)) {\n            return -1;\n          } else if (Date.parse(a.startTimeLocal) > Date.parse(b.startTimeLocal)) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        break;\n      case 'date-added-newest':\n        workOffers.sort((a, b) => {\n          if (Date.parse(a.startTimeLocal) < Date.parse(b.startTimeLocal)) {\n            return 1;\n          } else if (Date.parse(a.startTimeLocal) > Date.parse(b.startTimeLocal)) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n        break;\n      case 'date-start-latest':\n        workOffers.sort((a, b) => {\n          if (Date.parse(a.startTimeLocal) < Date.parse(b.startTimeLocal)) {\n            return 1;\n          } else if (Date.parse(a.startTimeLocal) > Date.parse(b.startTimeLocal)) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n        break;\n      case 'date-start-soonest':\n        workOffers.sort((a, b) => {\n          if (Date.parse(a.startTimeLocal) < Date.parse(b.startTimeLocal)) {\n            return -1;\n          } else if (Date.parse(a.startTimeLocal) > Date.parse(b.startTimeLocal)) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        break;\n      default:\n        break;\n    }\n\n    return workOffers;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation';\n\n// import { CalendarModule, DateAdapter } from 'angular-calendar';\n// import { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgxMaskModule } from 'ngx-mask'\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { AuthRoutingModule } from './auth.routing';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { RecoverComponent } from './pages/recover/recover.component';\n\n// import { SharedModule } from '@app/shared';\n// import { ProjectItemComponent } from './pages/project-item/project-item.component';\n// import { ProjectDetailsComponent } from './pages/project-details/project-details.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    RecoverComponent,\n    // ProjectItemComponent,\n    // ProjectDetailsComponent\n  ],\n  imports: [\n    AuthRoutingModule,\n    CommonModule,\n    GooglePlaceModule,\n    FlatpickrModule.forRoot(),\n    FormsModule,\n    NgBootstrapFormValidationModule,\n    NgxMaskModule,\n    ReactiveFormsModule,\n    SharedModule,\n    // CalendarModule.forRoot({\n    //   provide: DateAdapter,\n    //   useFactory: adapterFactory\n    // }),\n  ],\n  exports: [],\n  providers: [],\n  entryComponents: []\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// import { ProjectResolver } from './project-resolver.service';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\n// import { ProjectDetailsComponent } from './pages/project-details/project-details.component';\nimport { RecoverComponent } from './pages/recover/recover.component';\n\nexport const routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: { headerTheme: 'dark' },\n  },\n  {\n    path: 'login/verify',\n    component: LoginComponent,\n    data: { headerTheme: 'dark', verify: true },\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: { headerTheme: 'dark' },\n  },\n  {\n    path: 'recover',\n    component: RecoverComponent,\n    data: { headerTheme: 'dark' },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { AuthService } from '@core/services/auth.service';\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  loginData = {\n    email: '',\n    password: '',\n    remember: true,\n  };\n\n  private verification = {\n    email: '',\n    token: '',\n  };\n\n  isVerified = false;\n  verificationMessage: string;\n  msgError$: Observable<string>;\n  working$: Observable<boolean>;\n\n  constructor(\n    private authService: AuthService, \n    private activatedRoute: ActivatedRoute, \n    private broadcastService: BroadcastService,\n    private router: Router,\n  ) {\n    this.activatedRoute.data.subscribe(data => {\n      if (data.verify && data.verify === true) {\n        this.activatedRoute.queryParams.subscribe(params => {\n          this.verification.email = params.email;\n          this.verification.token = params.token;\n\n          this.authService.verify(this.verification).subscribe(() => {\n            this.verificationMessage = 'Your account has been verified. You can now login.'\n            this.isVerified = true;\n          });\n        });\n      } else {\n        this.isVerified = true;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  onSubmit() {\n    if (!this.loginData.email || !this.loginData.password) {\n      return;\n    }\n\n    this.broadcastService.setWorking(true);\n\n    this.authService.login(this.loginData).subscribe((resp) => {\n      this.router.navigate(['/account/dashboard']);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '@app/core/services/auth.service';\nimport { BroadcastService } from '@app/core/services/broadcast.service';\n\n@Component({\n  selector: 'app-recover',\n  templateUrl: './recover.component.html',\n})\nexport class RecoverComponent implements OnInit {\n  formGroup1: FormGroup; // Email\n  formGroup2: FormGroup; // Token\n  formGroup3: FormGroup; // New password\n  \n  recoverData = {\n    email: null,\n    token: null,\n    password: null,\n  };\n\n  showPassword = false;\n  recoverStep = 1;\n  msgError$: Observable<string>;\n  working$: Observable<boolean>;\n\n  constructor(\n    private authService: AuthService,\n    private broadcastService: BroadcastService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n\n    this.formGroup1 = new FormGroup({\n      'email': new FormControl('', [\n        Validators.required,\n        Validators.email,\n      ]),\n    });\n\n    this.formGroup2 = new FormGroup({\n      'token': new FormControl('', [\n        Validators.required,\n      ]),\n    });\n\n    this.formGroup3 = new FormGroup({\n      'password': new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20),\n      ]),\n    });\n  }\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  onSubmit(step: number) {\n    if (step === 1) {\n      this.broadcastService.setWorking(true);\n\n      let data = this.formGroup1.value;\n\n      this.authService.recover(data).subscribe((resp) => {\n        this.broadcastService.setWorking(false);\n        ++this.recoverStep;\n      });\n    } else if (step === 2) {\n      ++this.recoverStep;\n    } else if (step === 3) {\n      this.broadcastService.setWorking(true);\n\n      let data = { ...this.formGroup1.value, ...this.formGroup2.value, ...this.formGroup3.value };\n\n      this.authService.recover(data).subscribe((resp) => {\n        this.broadcastService.setWorking(false);\n        ++this.recoverStep;\n      });\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport * as countryCityState from 'countrycitystatejson';\n\nimport { AuthService } from '@core/services/auth.service';\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { UserService } from '@core/services/user.service';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit {\n  formGroup1: FormGroup;\n  formGroup2: FormGroup;\n\n  registrationData = {\n    email: null,\n    password: null,\n    firstName: null,\n    lastName: null,\n    birthDate: null,\n    phoneNumber: null,\n    address: null,\n    addressLine2: null,\n  };\n\n  private addressParts = {\n    addressLine1: null,\n    city: null,\n    area: null,\n    postalCode: null,\n    country: 'CA',\n  };\n\n  showPassword = false;\n\n  googlePlacesOptions = {\n    types: [],\n    componentRestrictions: { country: 'CA' },\n  };\n\n  registrationStep = 1;\n\n  working$: Observable<boolean>;\n  msgError$: Observable<string>;\n\n  constructor(\n    private authService: AuthService,\n    private broadcastService: BroadcastService,\n    private userService: UserService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n\n    this.formGroup1 = new FormGroup({\n      'email': new FormControl(this.registrationData.email, [\n        Validators.required,\n        Validators.email,\n      ]),\n      'password': new FormControl(this.registrationData.password, [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20),\n      ]),\n    });\n\n    this.formGroup2 = new FormGroup({\n      'firstName': new FormControl(this.registrationData.firstName, [\n        Validators.required,\n      ]),\n      'lastName': new FormControl(this.registrationData.lastName, [\n        Validators.required,\n      ]),\n      'birthDate': new FormControl(this.registrationData.birthDate, [\n        Validators.required,\n      ]),\n      'phoneNumber': new FormControl(this.registrationData.phoneNumber, [\n        Validators.required,\n      ]),\n      'address': new FormControl(this.registrationData.address, [\n        Validators.required,\n      ]),\n      'addressLine2': new FormControl(this.registrationData.addressLine2, [\n        // Optional.\n      ]),\n      'terms': new FormControl('', [\n        Validators.required,\n      ]),\n      'privacy': new FormControl('', [\n        Validators.required,\n      ]),\n    });\n  }\n\n  onBack() {\n    --this.registrationStep;\n  }\n\n  handleAddressChange(addr: any) {\n    const addrComponents = addr.address_components;\n\n    this.addressParts.addressLine1 = `${addrComponents[0].long_name} ${addrComponents[1].long_name}`;\n    this.addressParts.city = addrComponents[2].long_name;\n    this.addressParts.area = addrComponents[4].short_name;\n    this.addressParts.country = addrComponents[5].short_name;\n    this.addressParts.postalCode = addrComponents[6].long_name;\n  }\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  onSubmit(step: number) {\n    if (step === 1) {\n      ++this.registrationStep;\n    } else if (step === 2) {\n      this.broadcastService.setWorking(true);\n\n      let data = { ...this.formGroup1.value, ...this.formGroup2.value, ...this.addressParts };\n\n      this.userService.create(data).subscribe((resp) => {\n        this.broadcastService.setWorking(false);\n        ++this.registrationStep;\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { HomeRoutingModule } from './home.routing';\n\n// import { SharedModule } from '@app/shared';\n// import { ProjectItemComponent } from './pages/project-item/project-item.component';\n// import { ProjectDetailsComponent } from './pages/project-details/project-details.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    // ProjectItemComponent,\n    // ProjectDetailsComponent\n  ],\n  imports: [\n    SharedModule,\n    HomeRoutingModule\n  ],\n  exports: [],\n  providers: [],\n  entryComponents: []\n})\nexport class HomeModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// import { ProjectResolver } from './project-resolver.service';\nimport { HomeComponent } from './pages/home/home.component';\n// import { ProjectDetailsComponent } from './pages/project-details/project-details.component';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    data:{ headerTheme: 'dark' },\n    // {\n    //   path: 'home',\n    //   component: HomeComponent\n    // },\n    // {\n    //   path: 'projects/:id',\n    //   component: ProjectDetailsComponent,\n    //   resolve: {\n    //     project: ProjectResolver\n    //   }\n    // }\n    // ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { UserService } from '@core/services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n  private userSubject = new BehaviorSubject<any>(null);\n  user$ = this.userSubject.asObservable();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    let id = this.activatedRoute.snapshot.params.id;\n\n    if (!parseInt(id)) {\n      this.router.navigate(['/']);\n    }\n\n    this.userService.get(id).subscribe((resp: any) => {\n      this.userSubject.next(resp.data);\n    })\n  }\n\n  message() {\n    this.router.navigate(['/account/inbox'], { queryParams: { to: this.userSubject.getValue().id } });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\nimport { NgxMaskModule } from 'ngx-mask'\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { ProfileComponent } from './pages/profile/profile.component';\n\nimport { ProfileRoutingModule } from './profile.routing';\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n  ],\n  imports: [\n    ProfileRoutingModule,\n    FormsModule,\n    CommonModule,\n    GooglePlaceModule,\n    NgBootstrapFormValidationModule,\n    NgxMaskModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  exports: [],\n  providers: [],\n  entryComponents: []\n})\nexport class ProfileModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfileComponent } from './pages/profile/profile.component';\n\nexport const routes: Routes = [\n  {\n    path: 'profile/:id',\n    component: ProfileComponent,\n    data:{ headerTheme: 'dark' },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MapTypeStyle, MapTypeStyler } from '@agm/core/services/google-maps-types';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { GeoLocationService } from '@core/services/geolocation.service';\nimport { CaregiverService } from '@core/services/caregiver.service';\nimport { WorkOfferService } from '@core/services/work-offer.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n})\nexport class SearchComponent implements OnInit {\n  private readonly types = ['service-provider', 'work-offer'];\n\n  private workOffersSubject = new BehaviorSubject<any>(null);\n  workOffers$ = this.workOffersSubject.asObservable();\n\n  private serviceProvidersSubject = new BehaviorSubject<any>(null);\n  serviceProviders$ = this.serviceProvidersSubject.asObservable();\n\n  position$ = null;\n  mapStyles: MapTypeStyle[];\n\n  type: string = null;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private caregiverService: CaregiverService,\n    private geoLocationService: GeoLocationService,\n    private router: Router,\n    private workOfferService: WorkOfferService,\n  ) { }\n\n  ngOnInit() {\n    this.position$ = this.geoLocationService.position$;\n\n    this.activatedRoute.params.subscribe(params => {\n      let type = params['type'];\n\n      if (!this.types.includes(type)) {\n        this.router.navigate(['/']);\n        return;\n      }\n\n      // this.initMap();\n      this.type = type;\n      this.geoLocationService.setCurrentPosition();\n\n      this.geoLocationService.position$.subscribe((data) => {\n        if (!data) {\n          return;\n        }\n\n        let body = {\n          lat: data.coords.latitude,\n          lng: data.coords.longitude,\n          radius: 50,\n        };\n\n        if (type === 'work-offer') {\n          this.workOfferService.search(body).subscribe((resp: any) => {\n            this.workOffersSubject.next(resp.data.items);\n          });\n        } else {\n          this.caregiverService.search(body).subscribe((resp: any) => {\n            console.log(resp);\n            this.serviceProvidersSubject.next(resp.data.items);\n          });\n        }\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AgmCoreModule } from '@agm/core';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { SearchComponent } from './pages/search/search.component';\nimport { SearchRoutingModule } from './search.routing';\n\n@NgModule({\n  declarations: [\n    SearchComponent,\n  ],\n  imports: [\n    AgmCoreModule,\n    SharedModule,\n    CommonModule,\n    SearchRoutingModule,\n  ],\n  exports: [],\n  providers: [],\n  entryComponents: []\n})\nexport class SearchModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// import { ProjectResolver } from './project-resolver.service';\nimport { SearchComponent } from './pages/search/search.component';\n// import { ProjectDetailsComponent } from './pages/project-details/project-details.component';\nimport { ClientAuthGuard } from '@core/guards/client-auth.guard';\n\nexport const routes: Routes = [\n  {\n    path: 'search/:type',\n    component: SearchComponent,\n    data: { headerTheme: 'dark' },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\"\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { CareTypeService } from '@core/services/care-type.service';\nimport { UserService } from '@core/services/user.service';\nimport { WorkOfferService } from '@core/services/work-offer.service';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n})\nexport class NewComponent implements OnInit {\n  private careTypesSubject = new BehaviorSubject<any>(null);\n  careTypes$ = this.careTypesSubject.asObservable();\n\n  hasCreditCard: boolean = null;\n\n  formGroup: FormGroup;\n\n  googlePlacesOptions = {\n    types: [],\n    componentRestrictions: { country: 'CA' },\n  };\n\n  working$: Observable<boolean>;\n  msgError$: Observable<string>;\n\n  private workOfferData: any = {\n    title: null,\n    description: null,\n    careType: 'Child care',\n    responsibilities: null,\n    wardDetails: null,\n    rules: null,\n    meetingLocation: null,\n    startTimeLocal: null,\n    endTimeLocal: null,\n    wage: null,\n    address: null,\n    isContinuous: 1,\n  };\n\n  constructor(\n    private broadcastService: BroadcastService,\n    private careTypeService: CareTypeService,\n    private router: Router,\n    private userService: UserService,\n    private workOfferService: WorkOfferService,\n  ) { }\n\n  ngOnInit() {\n    this.working$ = this.broadcastService.working$;\n    this.msgError$ = this.broadcastService.msgError$;\n\n    this.userService.getCardSelf().subscribe((resp: any) => {\n      if (resp.data.items.length) {\n        this.hasCreditCard = true;\n\n        this.careTypeService.getAll().subscribe((resp: any) => {\n          this.careTypesSubject.next(resp.data.items);\n        });\n      } else {\n        this.hasCreditCard = false;\n      }\n    })\n\n    this.formGroup = new FormGroup({\n      'title': new FormControl(this.workOfferData.title, [\n        Validators.required,\n      ]),\n      'description': new FormControl(this.workOfferData.description, [\n        Validators.required,\n      ]),\n      'careType': new FormControl(this.workOfferData.careType, []),\n      'responsibilities': new FormControl(this.workOfferData.responsibilities, [\n        Validators.required,\n      ]),\n      'wardDetails': new FormControl(this.workOfferData.wardDetails, [\n        Validators.required,\n      ]),\n      'rules': new FormControl(this.workOfferData.rules, [\n        Validators.required,\n      ]),\n      'meetingLocation': new FormControl(this.workOfferData.meetingLocation, [\n        Validators.required,\n      ]),\n      'address': new FormControl(this.workOfferData.address, [\n        Validators.required,\n      ]),\n      'startTimeLocal': new FormControl(this.workOfferData.startTimeLocal, [\n        Validators.required,\n      ]),\n      'endTimeLocal': new FormControl(this.workOfferData.endTimeLocal, [\n        Validators.required,\n      ]),\n      'wage': new FormControl(this.workOfferData.wage, [\n        Validators.required,\n      ]),\n      'isContinuous': new FormControl(this.workOfferData.isContinuous, []),\n    });\n  }\n\n  handleMeetingLocationChange(addr: any) {\n    this.formGroup.get('meetingLocation').setValue(addr.formatted_address);\n  }\n\n  handleAddressChange(addr: any) {\n    this.formGroup.get('address').setValue(addr.formatted_address);\n  }\n\n  onSubmit() {\n    this.broadcastService.setWorking(true);\n\n    let data = this.formGroup.value;\n\n    this.workOfferService.create(data).subscribe((resp: any) => {\n      this.router.navigate([`/work-offer/${resp.data.id}`]);\n      this.broadcastService.setWorking(false);\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { MapTypeStyle, MapTypeStyler } from '@agm/core/services/google-maps-types';\n\nimport { BroadcastService } from '@core/services/broadcast.service';\nimport { UserService } from '@core/services/user.service';\nimport { WorkMessageService } from '@core/services/work-message.service';\nimport { WorkOfferService } from '@core/services/work-offer.service';\n\n@Component({\n  selector: 'app-work-offer-view',\n  templateUrl: './view.component.html',\n})\nexport class WorkOfferViewComponent implements OnInit {\n  private workOfferSubject = new BehaviorSubject<any>(null);\n  workOffer$ = this.workOfferSubject.asObservable();\n\n  private userOfferingSubject = new BehaviorSubject<any>(null);\n  userOffering$ = this.userOfferingSubject.asObservable();\n\n  private didApplySubject = new BehaviorSubject<boolean>(false);\n  didApply$ = this.didApplySubject.asObservable();\n\n  mapStyles: MapTypeStyle[];\n\n  user$: Observable<any>;\n  working$: Observable<boolean>;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private broadcastService: BroadcastService,\n    private userService: UserService,\n    private workMessageService: WorkMessageService,\n    private workOfferService: WorkOfferService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.user$ = this.userService.user$;\n    this.working$ = this.broadcastService.working$;\n    \n    let id = this.activatedRoute.snapshot.params.id;\n\n    // TODO Redirect home if work offer is already accepted.\n    if (!parseInt(id)) {\n      this.router.navigate(['/']);\n    }\n\n    this.workOfferService.get(id).subscribe((resp: any) => {\n      this.workOfferSubject.next(resp.data);\n\n      let idUserOffering = resp.data.idUserOffering;\n\n      this.userService.get(idUserOffering).subscribe((resp: any) => {\n        this.userOfferingSubject.next(resp.data);\n      });\n    });\n\n    this.workOfferService.getAwaitingApprovalAsServiceProvider().subscribe((resp: any) => {\n      let items = resp.data.items;\n\n      // TODO Create API endpoint to check if user applied to work offer to avoid long loops.\n      for (let item of items) {\n        if (item.id === parseInt(id)) {\n          this.didApplySubject.next(true);\n          return;\n        }\n      }\n    });\n\n    this.initMap();\n  }\n\n  apply() {\n    this.broadcastService.setWorking(true);\n\n    let id = this.activatedRoute.snapshot.params.id;\n    let data = { idWorkOffer: id };\n\n    this.workMessageService.create(data).subscribe((resp: any) => {\n      this.didApplySubject.next(true);\n      this.broadcastService.setWorking(false);\n    });\n  }\n\n  private initMap() {\n    this.mapStyles = [\n      {\n        featureType: \"administrative\",\n        elementType: \"geometry\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"administrative.land_parcel\",\n        elementType: \"geometry.fill\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"administrative.land_parcel\",\n        elementType: \"labels\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"administrative.locality\",\n        elementType: \"labels.text\",\n        stylers: [\n          {\n            visibility: \"simplified\"\n          }\n        ]\n      },\n      {\n        featureType: \"administrative.neighborhood\",\n        elementType: \"labels.text\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"landscape\",\n        elementType: \"geometry.fill\",\n        stylers: [\n          {\n            visibility: \"simplified\"\n          }\n        ]\n      },\n      {\n        featureType: \"landscape.natural.terrain\",\n        elementType: \"geometry.fill\",\n        stylers: [\n          {\n            visibility: \"simplified\"\n          }\n        ]\n      },\n      {\n        featureType: \"poi\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"poi\",\n        elementType: \"labels.text\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"road\",\n        elementType: \"labels.icon\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"road.arterial\",\n        elementType: \"labels\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"road.highway\",\n        elementType: \"geometry.fill\",\n        stylers: [\n          {\n            color: \"#f5b333\"\n          },\n          {\n            visibility: \"simplified\"\n          }\n        ]\n      },\n      {\n        featureType: \"road.highway\",\n        elementType: \"labels\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"road.highway\",\n        elementType: \"labels.text\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"road.local\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"road.local\",\n        elementType: \"labels\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"transit\",\n        stylers: [\n          {\n            visibility: \"off\"\n          }\n        ]\n      },\n      {\n        featureType: \"water\",\n        elementType: \"geometry.fill\",\n        stylers: [\n          {\n            color: \"#7dd9d0\"\n          }\n        ]\n      },\n    ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AgmCoreModule } from '@agm/core';\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation';\nimport { NgxMaskModule } from 'ngx-mask'\n\nimport { SharedModule } from '@shared/shared.module';\n\n// import { SearchComponent } from './pages/search/search.component';\nimport { WorkOfferRoutingModule } from './work-offer.routing';\nimport { WorkOfferViewComponent } from './pages/view/view.component';\nimport { NewComponent } from './pages/new/new.component';\n\n@NgModule({\n  declarations: [\n    // SearchComponent,\n    WorkOfferViewComponent,\n    NewComponent,\n  ],\n  imports: [\n    AgmCoreModule,\n    FlatpickrModule,\n    FormsModule,\n    GooglePlaceModule,\n    NgxMaskModule,\n    SharedModule,\n    CommonModule,\n    NgBootstrapFormValidationModule,\n    ReactiveFormsModule,\n    WorkOfferRoutingModule,\n  ],\n  exports: [],\n  providers: [],\n  entryComponents: []\n})\nexport class WorkOfferModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WorkOfferViewComponent } from './pages/view/view.component';\nimport { ClientAuthGuard } from '@app/core/guards/client-auth.guard';\nimport { NewComponent } from './pages/new/new.component';\n\nexport const routes: Routes = [\n  {\n    path: 'work-offer/new',\n    component: NewComponent,\n    canActivate: [ClientAuthGuard],\n    data: { headerTheme: 'dark' },\n  },\n  {\n    path: 'work-offer/:id',\n    component: WorkOfferViewComponent,\n    data: { headerTheme: 'dark' },\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorkOfferRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\n\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView\n} from 'angular-calendar';\n\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours\n} from 'date-fns';\n\nimport { WorkOfferService } from '@core/services/work-offer.service';\nimport { UserService } from '@core/services/user.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-calendar',\n  styleUrls: ['./calendar.component.scss'],\n  templateUrl: './calendar.component.html',\n})\nexport class CalendarComponent implements OnInit, AfterViewInit {\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  readonly colors: any = {\n    red: {\n      primary: '#ad2121',\n      secondary: '#FAE3E3'\n    },\n    blue: {\n      primary: '#1e90ff',\n      secondary: '#D1E8FF'\n    },\n    yellow: {\n      primary: '#e3bc08',\n      secondary: '#FDF1BA'\n    }\n  };\n\n  private eventsSubject = new BehaviorSubject<CalendarEvent[]>([]);\n  events$ = this.eventsSubject.asObservable();\n\n  activeDayIsOpen = true;\n  \n  constructor(private workOfferService: WorkOfferService, private userService: UserService) { }\n\n  ngOnInit() { }\n\n  ngAfterViewInit() {\n    // let calendarApi = this.calendar.getApi();\n    // calendarApi.removeAllEvents();\n\n    // if (this.userService.isServiceProvider()) {\n    //   this.initBookedOffersAsServiceProvider(calendarApi);\n    // }\n\n    // this.initBookedOffersAsClient(calendarApi);\n\n    this.initBookedOffersAsClient();\n\n    // this.workOfferService.getBookedAsServiceProvider().subscribe((resp: any) => {\n    //   console.log('as service provider');\n    //   console.log(resp);\n    // });\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n\n  // private initBookedOffersAsServiceProvider(calendarApi) {\n  //   let events: CalendarEvent[] = [];\n\n  //   this.workOfferService.getBookedAsServiceProvider().subscribe(data => {\n  //     if (data === null) return;\n\n  //     for (let workOffer of data) {\n  //       events.push({\n  //         id: workOffer.id,\n  //         allDay: true,\n  //         start: workOffer.startTimeUTC, // Automatically converst to user's local time\n  //         end: workOffer.endTimeUTC, // Automatically converst to user's local time\n  //         title: workOffer.title,\n  //         color: { primary: '#61cbbe', secondary: '#ff0000' },\n  //       });\n  //     }\n\n  //     calendarApi.addEventSource(events);\n  //   });\n  // }\n\n  private initBookedOffersAsClient() {\n    let events: CalendarEvent[] = [];\n\n    this.workOfferService.getBookedAsClient().subscribe((resp: any) => {\n      if (resp === null) {\n        return;\n      }\n\n      for (let workOffer of resp.data.items) {\n        events.push({\n          id: workOffer.id,\n          allDay: true,\n          start: new Date(workOffer.startTimeUTC), // Automatically converts to user's local time\n          end: new Date(workOffer.endTimeUTC), // Automatically converts to user's local time\n          title: workOffer.title,\n          color: { primary: '#000', secondary: '#555' },\n        });\n      }\n\n      let eventsValue = this.eventsSubject.getValue();\n      eventsValue.push(...events);\n\n      this.eventsSubject.next(eventsValue);\n\n      console.log(eventsValue);\n\n      // this.events.push(...events);\n\n      // console.log(this.events);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL21vZGFsL21vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NgxSmartModalService } from 'ngx-smart-modal';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ModalComponent implements OnInit {\n  @Input() modalIdentifier: string;\n  @Input() modalTitle: string;\n  @Input() modalHeaderBg: string;\n\n  constructor(private ngxSmartModalService: NgxSmartModalService) { }\n\n  ngOnInit() { }\n\n  open() {\n    this.ngxSmartModalService.getModal(this.modalIdentifier).open();\n  }\n\n  close() {\n    this.ngxSmartModalService.getModal(this.modalIdentifier).close();\n  }\n}\n","import { Directive, ElementRef, HostListener, Inject, Input, OnInit, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[appSelectPlaceholder]'\n})\nexport class SelectPlaceholderDirective implements OnInit {\n  @Input() appSelectPlaceholder: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, @Inject(DOCUMENT) private document) { }\n\n  ngOnInit() {\n    const option = document.createElement('option');\n\n    option.innerHTML = this.appSelectPlaceholder;\n    option.value = null;\n    option.disabled = true;\n\n    this.renderer.addClass(this.el.nativeElement, 'select-placeholder');\n    this.renderer.insertBefore(this.el.nativeElement, option, this.el.nativeElement.firstChild);\n  }\n\n  @HostListener('change') onChange() {\n    this.renderer.removeClass(this.el.nativeElement, 'select-placeholder');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\n\n// import { FullCalendarModule } from '@fullcalendar/angular';\n// import { DpDatePickerModule } from 'ng2-date-picker';\n\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\nimport { ModalComponent } from '@shared/components/modal/modal.component';\nimport { CalendarComponent } from '@shared/components/calendar/calendar.component';\nimport { SelectPlaceholderDirective } from '@shared/directives/select-placeholder/select-placeholder.directive';\n\n@NgModule({\n  imports: [\n    CalendarModule,\n    CommonModule,\n    // DpDatePickerModule,\n    // FullCalendarModule,\n    NgxSmartModalModule,\n  ],\n  declarations: [\n    CalendarComponent,\n    ModalComponent,\n    SelectPlaceholderDirective,\n  ],\n  entryComponents: [],\n  exports: [\n    CalendarComponent,\n    // DpDatePickerModule,\n    // FullCalendarModule,\n    ModalComponent,\n    SelectPlaceholderDirective,\n  ],\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nconst apiUrl = 'http://localhost:3000';\n\nexport const environment = {\n  production: false,\n  host: 'http://localhost:3001',\n\n  api: {\n    auth: '/auth',\n    caregivers: '/caregivers',\n    careType: '/care-types',\n    notifications: '/notifications',\n    shifts: '/shifts',\n    threads: '/threads',\n    users: '/users',\n    workMessages: '/work-messages',\n    workOffers: '/work-offers',\n  },\n  // login: '/login',\n  // fotgotPassword: '/forgot-password',\n  // resetPassword: '/reset-password',\n  // countires: '/static/countries.json',\n  // fileupload: '/fileupload',\n  // deleteAttachment: '/filedelete',\n  // clientSignup: '/client-signup'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}